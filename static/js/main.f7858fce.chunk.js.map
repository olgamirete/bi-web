{"version":3,"sources":["customHooks/useControls.js","customHooks/useCards.js","customHooks/useData.js","components/controls/Controls.js","components/side-panel/sections/table-fields/field-group/field-item/FieldItem.js","components/side-panel/sections/table-fields/field-group/FieldGroup.js","components/side-panel/sections/table-fields/TableFields.js","components/side-panel/sections/card-format/CardFormat.js","components/side-panel/sections/other/Other.js","components/side-panel/SidePanel.js","components/dashboard-content/components/card-content/charts/BarChart.js","components/dashboard-content/components/card-content/charts/PieChart.js","components/dashboard-content/components/card-content/charts/LineChart.js","components/dashboard-content/components/card-content/charts/BarChart2.js","components/dashboard-content/components/meta-card/MetaCard.js","components/dashboard-content/customHooks/useDashboardEventHandlers.js","components/dashboard-content/components/selection-rectangle/SelectionRectangle.js","components/dashboard-content/components/grid/Grid.js","components/dashboard-content/DashboardContent.js","App.js","serviceWorker.js","index.js"],"names":["useControls","useState","flagShowSidePanel","setFlagShowSidePanel","flagSnapToGrid","setFlagSnapToGrid","flagDisplayGrid","setFlagDisplayGrid","flagAllowSelection","setFlagAllowSelection","toggleSidePanel","useCallback","prevFlag","toggleSnapToGrid","toggleDisplayGrid","toggleFlagAllowSelection","showSidePanel","snapToGrid","displayGrid","allowSelection","GRID_UNIT_WIDTH","DEFAULT_SIZE","width","height","GRID_UNIT_HEIGHT","useCards","controlFlags","past","present","Map","future","cards","setCards","nextCardIndex","setNextCardIndex","newCardTemplate","cardId","nonDefaultValues","id","pos","undefined","x","y","size","propsBeforeChange","selected","flags","allowResize","allowMove","type","contentOptions","showLegend","fields","categories","valuesX","valuesY","updateCardInfo","propsToChange","prevCard","get","newProps","key","hasOwnProperty","set","updateContentOptions","optionsToChange","newOptions","addNewCard","startingProps","newCards","newCardProps","concat","prevState","moveCard","newPos","newPosControlled","left","Math","round","top","translateSelectedCards","translation","forEach","card","posBeforeMove","resizeCard","mouseTranslation","anchor","prevSize","prevPos","nextPos","right","min","bottom","nextPosControlled","nextSize","max","nextWidthControlled","nextHeightControlled","nextSizeControlled","toggleCardSelection","deleteCard","delete","deleteSelectedCards","flagDeletedSomething","__updatePropsBeforeChange","setContentTypeOfSelectedCards","toggleCardLegend","toggleSelectedCardsLegend","clearSelection","isCardSelected","has","Error","isCardInsideSelectionRect","cardPos","cardSize","rectProps","rectPos","rectSize","insideX","borderWidth","insideY","selectWithRectangle","rectangleProps","flagExpandCurrentSelection","flagSelect","undo","length","slice","redo","cardFlags","canUndo","canRedo","cardMethods","add","move","translateSelected","resize","isSelected","toggleSelect","deleteSelected","useData","dataStructure","Controls","props","className","onPointerDown","controlMethods","alt","FieldItem","tableId","fieldName","FieldGroup","flagExpanded","setFlagExpanded","onPointerUp","e","target","innerHTML","tableStructure","map","field","i","arr","TableFields","activeSection","Array","from","values","CardFormat","Other","SidePanel","setActiveSection","handlePointerDown","selectedSection","dataset","section","parentNode","data-section","BarChart","chartWidth","cardInfo","chartHeight","originLeft","originTop","axisMarginTop","axisHorizontalLength","axisVerticalLength","xmlns","viewBox","ry","d","PieChart","cx","cy","data","name","uv","pv","amt","LineChart","margin","strokeDasharray","dataKey","stroke","activeDot","r","BarChart2","layout","verticalAlign","iconType","iconSize","fill","MetaCard","Contents","dashboardFlags","overrideHoverPointers","style","backgroundColor","color","data-anchor","useDashboardEventHandlers","dashboardId","selRectBorderWidth","setAllowResize","setAllowMove","lastClickedPos","setLastClickedPos","setAnchor","lastContainerClicked","setLastContainerClicked","flagOverrideHoverPointers","setFlagOverrideHoverPointers","lockCtrlKey","setLockCtrlKey","flagDraw","selectionRectangleProps","setSelectionRectangleProps","flagPointerDown","setFlagPointerDown","setBorderCursorGlobalClass","isBorder","isCorner","isHorizontal","cursorClass","join","document","getElementById","setProperty","clearBorderCursorGlobalClass","removeProperty","containedInCardContainer","element","a","classList","includes","parentElement","useEffect","dashboard","preventDefault","pageX","pageY","cardContainer","shiftKey","classesTargetElement","isHor","leftClasses","isLeft","some","el","topClasses","newAnchor","ctrlKey","dashboardRect","getBoundingClientRect","scrollLeft","scrollTop","pointerType","addEventListener","removeEventListener","useLayoutEffect","handlePointerMove","priorizeX","abs","restrictedTranslation","resizeTranslation","newSelectionRectangleProps","handlePointerUp","handleKeyDown","handleKeyUp","window","debugInfo","JSON","stringify","allowRectangleSelect","pointerDown","SelectionRectangle","selRectId","selRectInfo","Grid","DASHBOARD_ID","DashboardContent","dashboardRef","useRef","dashboardProps","ref","controlProps","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f7858fce.chunk.js","sourcesContent":["import { useState, useCallback } from 'react';\r\n\r\nfunction useControls() {\r\n\r\n  const [flagShowSidePanel, setFlagShowSidePanel] = useState(true);\r\n  const [flagSnapToGrid, setFlagSnapToGrid] = useState(false);\r\n  const [flagDisplayGrid, setFlagDisplayGrid] = useState(true);\r\n  const [flagAllowSelection, setFlagAllowSelection] = useState(false);\r\n  // const [gridSize, setGridSize] = useState({\r\n  //   width: \"100%\",\r\n  //   height: \"100%\"\r\n  // })\r\n  // const [lockGridSetting, setLockGridSetting] = useState(false);\r\n\r\n  const toggleSidePanel = useCallback(() => {\r\n    setFlagShowSidePanel(prevFlag => !prevFlag);\r\n  }, []);\r\n\r\n  const toggleSnapToGrid = useCallback(() => {\r\n    setFlagSnapToGrid(prevFlag => !prevFlag);\r\n  }, []);\r\n\r\n  const toggleDisplayGrid = useCallback(() => {\r\n    setFlagDisplayGrid(prevFlag => !prevFlag);\r\n  }, []);\r\n\r\n  const toggleFlagAllowSelection = useCallback(() => {\r\n    setFlagAllowSelection(prevFlag => !prevFlag);\r\n  }, []);\r\n\r\n  // const setGridWidth = useCallback((newWidth) => {\r\n  //   setGridSize(prevSize => ({\r\n  //     width: newWidth,\r\n  //     height: prevSize.height\r\n  //   }));\r\n  // }, []);\r\n\r\n  // const setGridHeight = useCallback((newHeight) => {\r\n  //   setGridSize(prevSize => ({\r\n  //     width: prevSize.width,\r\n  //     height: newHeight\r\n  //   }));\r\n  // }, []);\r\n\r\n\r\n  // // Handle Alt key press and release.------------------------------------------\r\n  // useEffect(() => {\r\n  //   if (keyboardInfo.altPressed === true) {\r\n  //     if (lockGridSetting === false) {\r\n  //       setLockGridSetting(true);\r\n  //       toggleSnapToGrid();\r\n  //     }\r\n  //   } else {\r\n  //     if (lockGridSetting === true) {\r\n  //       setLockGridSetting(false);\r\n  //       toggleSnapToGrid();\r\n  //     }\r\n  //   }\r\n  // }, [keyboardInfo.altPressed, lockGridSetting, toggleSnapToGrid]);\r\n  // // ---------------------------------------------------------------------------\r\n\r\n\r\n\r\n  const controlFlags = {\r\n    showSidePanel: flagShowSidePanel,\r\n    snapToGrid: flagSnapToGrid,\r\n    displayGrid: flagDisplayGrid,\r\n    allowSelection: flagAllowSelection\r\n  };\r\n  // const controlProps = {\r\n  //   gridSize: gridSize\r\n  // }\r\n  const controlMethods = {\r\n    setFlagShowSidePanel: setFlagShowSidePanel,\r\n    toggleSidePanel: toggleSidePanel,\r\n    toggleSnapToGrid: toggleSnapToGrid,\r\n    toggleDisplayGrid: toggleDisplayGrid,\r\n    toggleFlagAllowSelection: toggleFlagAllowSelection,\r\n    setFlagAllowSelection: setFlagAllowSelection,\r\n    // setGridSize: setGridSize,\r\n    // setGridWidth: setGridWidth,\r\n    // setGridHeight: setGridHeight\r\n  };\r\n\r\n  return [controlFlags, controlMethods];\r\n}\r\n\r\nexport default useControls;","import { useState, useCallback } from 'react';\r\n\r\nconst GRID_UNIT_WIDTH = 20;\r\nconst GRID_UNIT_HEIGHT = 20;\r\n\r\nconst MIN_WIDHT = GRID_UNIT_WIDTH * 2;\r\nconst MIN_HEIGHT = GRID_UNIT_HEIGHT * 2;\r\nconst DEFAULT_WIDTH = GRID_UNIT_WIDTH * 3 * 8;\r\nconst DEFAULT_HEIGHT = GRID_UNIT_HEIGHT * 3 * 5;\r\nconst DEFAULT_SIZE = { width: DEFAULT_WIDTH, height: DEFAULT_HEIGHT };\r\n\r\nfunction useCards(controlFlags) {\r\n\r\n  const [cards, setCards] = useState({\r\n    past: [],\r\n    present: new Map(),\r\n    future: []\r\n  });\r\n\r\n  const [nextCardIndex, setNextCardIndex] = useState(0);\r\n\r\n  const newCardTemplate = useCallback((cardId, nonDefaultValues) => {\r\n    return {\r\n      id: cardId,\r\n      pos: nonDefaultValues.pos === undefined ? { x: 0, y: 0 } : nonDefaultValues.pos,\r\n      size: nonDefaultValues.size === undefined ? DEFAULT_SIZE : nonDefaultValues.size,\r\n      propsBeforeChange: {\r\n        pos: nonDefaultValues.pos === undefined ? { x: 0, y: 0 } : nonDefaultValues.pos,\r\n        size: nonDefaultValues.size === undefined ? DEFAULT_SIZE : nonDefaultValues.size\r\n      },\r\n      selected: false,\r\n      flags: {\r\n        allowResize: {\r\n          width: false,\r\n          height: false\r\n        },\r\n        allowMove: false\r\n      },\r\n      type: nonDefaultValues.type === undefined ? \"empty\" : nonDefaultValues.type,\r\n      contentOptions: {\r\n        showLegend: false,\r\n        fields: {\r\n          categories: [],\r\n          valuesX: [],\r\n          valuesY: []\r\n        }\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const updateCardInfo = useCallback((cards, cardId, propsToChange) => {\r\n    const prevCard = cards.get(cardId);\r\n    let newProps = {};\r\n    for (const key in prevCard) {\r\n      if (propsToChange.hasOwnProperty(key) && key !== \"id\" ) {\r\n        newProps[key] = propsToChange[key];\r\n      } else {\r\n        newProps[key] = prevCard[key];\r\n      }\r\n    }\r\n    cards.set(cardId, newProps);\r\n  }, []);\r\n\r\n  const updateContentOptions = useCallback((cards, cardId, optionsToChange) => {\r\n    const prevCard = cards.get(cardId);\r\n    let newOptions = {};\r\n    for (const key in prevCard.contentOptions) {\r\n      if (optionsToChange.hasOwnProperty(key)) {\r\n        newOptions[key] = optionsToChange[key];\r\n      } else {\r\n        newOptions[key] = prevCard.contentOptions[key];\r\n      }\r\n    }\r\n    updateCardInfo(cards, cardId, {contentOptions: newOptions});\r\n  }, [updateCardInfo]);\r\n\r\n  const addNewCard = useCallback((startingProps) => {\r\n    setCards(cards => {\r\n      let newCards = new Map(cards.present);\r\n      const cardId = \"card-\" + nextCardIndex;\r\n      const newCardProps = newCardTemplate(cardId, startingProps);\r\n      newCards.set(cardId, newCardProps);\r\n      return {\r\n        past: cards.past.concat([cards.present]),\r\n        present: newCards,\r\n        future: []\r\n      };\r\n    });\r\n    setNextCardIndex((prevState) => prevState + 1);\r\n  }, [nextCardIndex, newCardTemplate]);\r\n\r\n  const moveCard = useCallback((cardId, newPos) => {\r\n    const newPosControlled = {\r\n      left: controlFlags.snapToGrid ? Math.round(newPos.left / GRID_UNIT_WIDTH, 0) * GRID_UNIT_WIDTH : newPos.left,\r\n      top: controlFlags.snapToGrid ? Math.round(newPos.top / GRID_UNIT_WIDTH, 0) * GRID_UNIT_WIDTH : newPos.top\r\n    }\r\n    setCards(cards => {\r\n      let newCards = new Map(cards.present);\r\n      updateCardInfo(newCards, cardId, { pos: newPosControlled });\r\n      return {\r\n        past: cards.past.concat([cards.present]),\r\n        present: newCards,\r\n        future: []\r\n      };\r\n    });\r\n  }, [controlFlags.snapToGrid, updateCardInfo]);\r\n\r\n  const translateSelectedCards = useCallback((translation) => {\r\n    setCards(cards => {\r\n      let newCards = new Map(cards.present);\r\n      newCards.forEach(card => {\r\n        if (card.selected === true) {\r\n          const posBeforeMove = card.propsBeforeChange.pos;\r\n          const newPos = {\r\n            left: posBeforeMove.left + translation.x,\r\n            top: posBeforeMove.top + translation.y\r\n          };\r\n          const newPosControlled = {\r\n            left: controlFlags.snapToGrid ? Math.round(newPos.left / GRID_UNIT_WIDTH, 0) * GRID_UNIT_WIDTH : newPos.left,\r\n            top: controlFlags.snapToGrid ? Math.round(newPos.top / GRID_UNIT_WIDTH, 0) * GRID_UNIT_WIDTH : newPos.top\r\n          }\r\n          updateCardInfo(newCards, card.id, { pos: newPosControlled });\r\n        }\r\n      });\r\n      return {\r\n        past: cards.past, // we do not update the past until we fix the values of propsBeforeChange\r\n        present: newCards,\r\n        future: cards.future // we do not update the future until we fix the values of propsBeforeChange\r\n      };\r\n    });\r\n  }, [controlFlags.snapToGrid, updateCardInfo]);\r\n\r\n  const resizeCard = useCallback((cardId, mouseTranslation, allowResize, anchor) => {\r\n    setCards(cards => {\r\n      const prevCard = cards.present.get(cardId);\r\n      const prevSize = prevCard.propsBeforeChange.size;\r\n      const prevPos = prevCard.propsBeforeChange.pos;\r\n\r\n      const nextPos = {\r\n        left: anchor.right ? Math.min(prevPos.left + mouseTranslation.x, prevPos.left + prevSize.width - MIN_WIDHT) : prevPos.left,\r\n        top: anchor.bottom ? Math.min(prevPos.top + mouseTranslation.y, prevPos.top + prevSize.height - MIN_HEIGHT) : prevPos.top\r\n      }\r\n      const nextPosControlled = {\r\n        left: controlFlags.snapToGrid && anchor.right && allowResize.width ? Math.round(nextPos.left / GRID_UNIT_WIDTH, 0) * GRID_UNIT_WIDTH : nextPos.left,\r\n        top: controlFlags.snapToGrid && anchor.bottom && allowResize.height ? Math.round(nextPos.top / GRID_UNIT_WIDTH, 0) * GRID_UNIT_WIDTH : nextPos.top\r\n      }\r\n\r\n      const nextSize = {\r\n        width: Math.max(prevSize.width + mouseTranslation.x * (anchor.right ? -1 : 1), MIN_WIDHT),\r\n        height: Math.max(prevSize.height + mouseTranslation.y * (anchor.bottom ? -1 : 1), MIN_HEIGHT)\r\n      }\r\n      let nextWidthControlled = nextSize.width;\r\n      let nextHeightControlled = nextSize.height;\r\n      if (controlFlags.snapToGrid) {\r\n        if (allowResize.width) {\r\n          nextWidthControlled = anchor.right ? prevSize.width - (nextPosControlled.left - prevPos.left) : Math.round((prevPos.left + nextSize.width) / GRID_UNIT_WIDTH, 0) * GRID_UNIT_WIDTH - prevPos.left;\r\n        }\r\n        if (allowResize.height) {\r\n          nextHeightControlled = anchor.bottom ? prevSize.height - (nextPosControlled.top - prevPos.top) : Math.round((prevPos.top + nextSize.height) / GRID_UNIT_HEIGHT, 0) * GRID_UNIT_HEIGHT - prevPos.top;\r\n        }\r\n      }\r\n      const nextSizeControlled = {\r\n        width: nextWidthControlled,\r\n        height: nextHeightControlled\r\n      }\r\n\r\n      let newCards = new Map(cards.present);\r\n      updateCardInfo(newCards, cardId, {\r\n        pos: nextPosControlled,\r\n        size: nextSizeControlled\r\n      });\r\n      return {\r\n        past: cards.past, // we do not update the past until we fix the values of propsBeforeChange\r\n        present: newCards,\r\n        future: cards.future // we do not update the future until we fix the values of propsBeforeChange\r\n      };\r\n    });\r\n  }, [controlFlags.snapToGrid, updateCardInfo]);\r\n\r\n  const toggleCardSelection = useCallback((cardId) => {\r\n    setCards(cards => {\r\n      let newCards = new Map(cards.present);\r\n      const prevCard = newCards.get(cardId);\r\n      updateCardInfo(newCards, cardId, { selected: !prevCard.selected });\r\n      return {\r\n        past: cards.past, // no need to update the past when selecting a card\r\n        present: newCards,\r\n        future: cards.future // no need to update the future when selecting a card\r\n      };\r\n    });\r\n  }, [updateCardInfo]);\r\n\r\n  const deleteCard = useCallback((cardId) => {\r\n    setCards(cards => {\r\n      let newCards = new Map(cards.present);\r\n      newCards.delete(cardId);\r\n      return {\r\n        past: cards.past.concat([cards.present]),\r\n        present: newCards,\r\n        future: []\r\n      };\r\n    });\r\n  }, []);\r\n\r\n  const deleteSelectedCards = useCallback(() => {\r\n    setCards(cards => {\r\n      let flagDeletedSomething = false;\r\n      let newCards = new Map(cards.present);\r\n      newCards.forEach(card => {\r\n        if (card.selected === true) {\r\n          newCards.delete(card.id);\r\n          flagDeletedSomething = true;\r\n        }\r\n      });\r\n      return {\r\n        past: flagDeletedSomething ? cards.past.concat([cards.present]) : cards.past,\r\n        present: flagDeletedSomething ? newCards : cards.present,\r\n        future: flagDeletedSomething ? [] : cards.future\r\n      };\r\n    });\r\n  }, []);\r\n\r\n  const __updatePropsBeforeChange = useCallback(() => {\r\n    setCards(cards => {\r\n      let newCards = new Map(cards.present);\r\n      newCards.forEach(card => {\r\n        updateCardInfo(newCards, card.id, {\r\n          propsBeforeChange: {\r\n            pos: card.pos,\r\n            size: card.size\r\n          }\r\n        });\r\n      });\r\n      return {\r\n        past: cards.past.concat([cards.present]),\r\n        present: newCards,\r\n        future: []\r\n      };\r\n    });\r\n  }, [updateCardInfo]);\r\n\r\n  const setContentTypeOfSelectedCards = useCallback((type) => {\r\n    setCards(cards => {\r\n      let newCards = new Map(cards.present);\r\n      newCards.forEach(card => {\r\n        if (card.selected === true) {\r\n          updateCardInfo(newCards, card.id, { type: type });\r\n        }\r\n      });\r\n      return {\r\n        past: cards.past.concat([cards.present]),\r\n        present: newCards,\r\n        future: []\r\n      };\r\n    });\r\n  }, [updateCardInfo]);\r\n\r\n  const toggleCardLegend = useCallback((cardId) => {\r\n    setCards(cards => {\r\n      let newCards = new Map(cards.present);\r\n      const prevCard = newCards.get(cardId);\r\n      updateContentOptions(newCards, cardId, {\r\n        showLegend: !prevCard.contentOptions.showLegend\r\n      });\r\n      return {\r\n        past: cards.past.concat([cards.present]),\r\n        present: newCards,\r\n        future: []\r\n      };\r\n    });\r\n  }, [updateContentOptions]);\r\n\r\n  const toggleSelectedCardsLegend = useCallback((cardId) => {\r\n    \r\n    setCards(cards => {\r\n      let newCards = new Map(cards.present);\r\n      newCards.forEach(card => {\r\n        if (card.selected === true) {\r\n          updateContentOptions(newCards, card.id, {\r\n            showLegend: !card.contentOptions.showLegend\r\n          });\r\n        }\r\n      });\r\n      return {\r\n        past: cards.past.concat([cards.present]),\r\n        present: newCards,\r\n        future: []\r\n      };\r\n    });\r\n  }, [updateContentOptions]);\r\n\r\n  const clearSelection = useCallback(() => {\r\n    setCards(cards => {\r\n      let newCards = new Map(cards.present);\r\n      newCards.forEach(card => {\r\n        if (card.selected === true) {\r\n          updateCardInfo(newCards, card.id, { selected: false });\r\n        }\r\n      });\r\n      return {\r\n        past: cards.past, // no need to update the past when clearing the selection\r\n        present: newCards,\r\n        future: cards.future // no need to update the future when clearing the selection\r\n      };\r\n    });\r\n  }, [updateCardInfo]);\r\n\r\n  const isCardSelected = useCallback((cardId) => {\r\n    if (cards.present.has(cardId) === true) {\r\n      return cards.present.get(cardId).selected;\r\n    } else {\r\n      return Error(\"cardId does not exist.\");\r\n    }\r\n  }, [cards.present]);\r\n\r\n  const isCardInsideSelectionRect = useCallback((cardPos, cardSize, rectProps) => {\r\n    const rectPos = {\r\n      left: rectProps.pos.left,\r\n      top: rectProps.pos.top\r\n    }\r\n    const rectSize = {\r\n      width: Math.max(rectProps.size.width, 0),\r\n      height: Math.max(rectProps.size.height, 0)\r\n    }\r\n    const insideX = (cardPos.left >= rectPos.left + rectProps.borderWidth) && (cardPos.left + cardSize.width <= rectPos.left + rectProps.borderWidth + rectSize.width - 2 * rectProps.borderWidth);\r\n    const insideY = (cardPos.top >= rectPos.top + rectProps.borderWidth) && (cardPos.top + cardSize.height <= rectPos.top + rectProps.borderWidth + rectSize.height - 2 * rectProps.borderWidth);\r\n    return insideX && insideY;\r\n  }, []);\r\n\r\n  const selectWithRectangle = useCallback((rectangleProps, flagExpandCurrentSelection) => {\r\n    setCards(cards => {\r\n      let newCards = new Map(cards.present);\r\n      newCards.forEach(card => {\r\n        const flagSelect = isCardInsideSelectionRect(\r\n          card.pos,\r\n          card.size,\r\n          rectangleProps\r\n        );\r\n        updateCardInfo(newCards, card.id, {\r\n          selected: flagExpandCurrentSelection ? (flagSelect || card.selected) : flagSelect\r\n        });\r\n      });\r\n      return {\r\n        past: cards.past, // no need to update the past when selecting cards\r\n        present: newCards,\r\n        future: cards.future // no need to update the future when selecting cards\r\n      };\r\n    });\r\n  }, [isCardInsideSelectionRect, updateCardInfo]);\r\n\r\n  const undo = useCallback(() => {\r\n    setCards(cards => ({\r\n      past: cards.past.length > 0 ? cards.past.slice(0, cards.past.length - 1) : cards.past,\r\n      present: cards.past.length > 0 ? cards.past[cards.past.length - 1] : cards.present,\r\n      future: cards.past.length > 0 ? cards.future.concat([cards.present]) : cards.future\r\n    }));\r\n  }, []);\r\n\r\n  const redo = useCallback(() => {\r\n    setCards(cards => ({\r\n      past: cards.future.length > 0 ? cards.past.concat([cards.present]) : cards.past,\r\n      present: cards.future.length > 0 ? cards.future[cards.future.length - 1] : cards.present,\r\n      future: cards.future.length > 0 ? cards.future.slice(0, cards.future.length - 1) : cards.future\r\n    }));\r\n  }, []);\r\n\r\n  const cardFlags = {\r\n    canUndo: cards.past.length > 0,\r\n    canRedo: cards.future.length > 0\r\n  }\r\n\r\n  const cardMethods = {\r\n    add: addNewCard,\r\n    move: moveCard,\r\n    translateSelected: translateSelectedCards,\r\n    resize: resizeCard,\r\n    __updatePropsBeforeChange: __updatePropsBeforeChange,\r\n    isSelected: isCardSelected,\r\n    toggleSelect: toggleCardSelection,\r\n    clearSelection: clearSelection,\r\n    delete: deleteCard,\r\n    deleteSelected: deleteSelectedCards,\r\n    selectWithRectangle: selectWithRectangle,\r\n    setContentTypeOfSelectedCards: setContentTypeOfSelectedCards,\r\n    undo: undo,\r\n    redo: redo,\r\n    toggleCardLegend: toggleCardLegend,\r\n    toggleSelectedCardsLegend\r\n  }\r\n\r\n  return [cards.present, cardFlags, cardMethods];\r\n}\r\nexport default useCards;","function useData() {\r\n\r\n    const fieldsTable1 = [\"anio\", \"nombre\", \"cantidad\"];\r\n    const fieldsTable2 = [\"dni\", \"provincia\", \"edad\"];\r\n    const fieldsTable3 = [\"fruta\", \"calorías\"];\r\n\r\n\r\n    const dataStructure = new Map();\r\n    dataStructure.set(\"table1\", {id: \"table1\", fields: fieldsTable1});\r\n    dataStructure.set(\"table2\", {id: \"table2\", fields: fieldsTable2});\r\n    dataStructure.set(\"table3\", {id: \"table3\", fields: fieldsTable3});\r\n\r\n    const data = null;\r\n\r\n    return [dataStructure, data];\r\n}\r\n\r\nexport default useData;","import React from 'react';\r\nimport './Controls.css';\r\n\r\nfunction Controls(props) {\r\n  // const [test, setTest] = useState(false);\r\n  // const toggleTest = () => setTest(prevTest => !prevTest);\r\n  return (\r\n    <div className=\"controls\">\r\n      <button\r\n        className=\"button\"\r\n        onPointerDown={props.controlMethods.toggleSidePanel}>Toggle menu</button>\r\n      <button\r\n        className={\"button\" + (props.cardFlags.canUndo ? \"\" : \" disabled\")}\r\n        onPointerDown={props.cardMethods.undo}>Undo</button>\r\n      <button\r\n        className={\"button\" + (props.cardFlags.canRedo ? \"\" : \" disabled\")}\r\n        onPointerDown={props.cardMethods.redo}>Redo</button>\r\n      <button\r\n        alt=\"Toggle snap to grid\"\r\n        className={\"button\" + (props.controlFlags.snapToGrid ? \" active\" : \"\")}\r\n        onPointerDown={props.controlMethods.toggleSnapToGrid}>\r\n        Snap to grid\r\n      </button>\r\n      <button\r\n        alt=\"Toggle display grid\"\r\n        className={\"button\" + (props.controlFlags.displayGrid ? \" active\" : \"\")}\r\n        onPointerDown={props.controlMethods.toggleDisplayGrid}>\r\n        Display grid\r\n      </button>\r\n      <button\r\n        className=\"button\"\r\n        onPointerDown={() => props.cardMethods.add({ pos: { left: 20, top: 20 } })}>+</button>\r\n      <button\r\n        className={\"button\" + (props.controlFlags.allowSelection ? \" active\" : \"\")}\r\n        onPointerDown={props.controlMethods.toggleFlagAllowSelection}>Select</button>\r\n      <button\r\n        className=\"button\"\r\n        onPointerDown={props.cardMethods.deleteSelected}>Delete</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Controls;","import React from 'react';\r\nimport './FieldItem.css';\r\n\r\nfunction FieldItem(props) {\r\n  // const handlerPointerDown = (e) => {\r\n  //   e.preventDefault();\r\n  // }\r\n  return (\r\n    <li\r\n      // key={props.key}\r\n      id={\"table-\" + props.tableId + \"-field-\" + props.fieldName}\r\n      className=\"field-item\">\r\n      {props.fieldName}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default FieldItem;","import React, { useState } from 'react';\r\nimport './FieldGroup.css';\r\nimport FieldItem from './field-item/FieldItem.js';\r\n\r\nfunction FieldGroup(props) {\r\n\r\n  const [flagExpanded, setFlagExpanded] = useState(false);\r\n\r\n  const toggleExpand = (e) => {\r\n    e.target.innerHTML = flagExpanded ? \"+\" : \"-\";\r\n    setFlagExpanded(!flagExpanded);\r\n  }\r\n\r\n  return (\r\n    <div className=\"table-fields-section\">\r\n      <div className=\"container-button-and-title\">\r\n        <button\r\n          className=\"button-expand-collapse\"\r\n          onPointerUp={toggleExpand}>+</button>\r\n        <h4\r\n          id={props.tableStructure.id}\r\n          className=\"fields-table-name\">\r\n          {props.tableStructure.id}\r\n        </h4>\r\n      </div>\r\n      <ul className={\"fields-list\" + (flagExpanded ? \"\" : \" hidden\")}>\r\n        {\r\n          props.tableStructure.fields.map((field, i, arr) => {\r\n            return <FieldItem\r\n              key={i}\r\n              tableId={props.tableStructure.id}\r\n              fieldName={field} />\r\n          })\r\n        }\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FieldGroup;","import React from 'react';\r\nimport './TableFields.css';\r\nimport FieldGroup from './field-group/FieldGroup.js';\r\n\r\nfunction TableFields(props) {\r\n  return (\r\n    <section className={\"section\" + (props.activeSection === \"fields\" ? \" active\" : \"\")}>\r\n      <h3 className=\"title\">Fields</h3>\r\n      {\r\n        Array.from(props.dataStructure.values()).map((tableStructure, i, arr) => {\r\n          return <FieldGroup key={i} tableStructure={tableStructure} />\r\n        })\r\n      }\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default TableFields;","import React from 'react';\r\n\r\n\r\nfunction CardFormat(props) {\r\n  return (\r\n    <section className={\"section\" + (props.activeSection === \"format\" ? \" active\" : \"\")}>\r\n      <h3 className=\"title\">Format</h3>\r\n          <h4>Set chart type</h4>\r\n          <button\r\n            onPointerDown={() => props.cardMethods.setContentTypeOfSelectedCards(\"barchart\")} >\r\n            Bar chart\r\n          </button>\r\n          <button\r\n            onPointerDown={() => props.cardMethods.setContentTypeOfSelectedCards(\"piechart\")} >\r\n            Pie chart\r\n          </button>\r\n          <button\r\n            onPointerDown={() => props.cardMethods.setContentTypeOfSelectedCards(\"linechart\")} >\r\n            Line chart\r\n          </button>\r\n          <button\r\n            onPointerDown={() => props.cardMethods.setContentTypeOfSelectedCards(\"barchart2\")} >\r\n            Bar chart 2\r\n          </button>\r\n          <h4>Set chart options</h4>\r\n          <button\r\n            onPointerDown={props.cardMethods.toggleSelectedCardsLegend} >\r\n            Toggle legend\r\n          </button>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default CardFormat;","import React from 'react';\r\n\r\n\r\nfunction Other(props) {\r\n  return (\r\n    <section className={\"section\" + (props.activeSection === \"other\" ? \" active\" : \"\")}>\r\n      <h3 className=\"title\">Other</h3>\r\n          Other\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Other;","import React, { useState } from 'react';\r\nimport './SidePanel.css';\r\nimport TableFields from './sections/table-fields/TableFields.js';\r\nimport CardFormat from './sections/card-format/CardFormat.js';\r\nimport Other from './sections/other/Other.js';\r\n\r\nfunction SidePanel(props) {\r\n\r\n  const [activeSection, setActiveSection] = useState(\"fields\");\r\n  \r\n  const handlePointerDown = (e) => {\r\n    let selectedSection = e.target.dataset.section;\r\n    if (selectedSection === undefined) {\r\n      selectedSection = e.target.parentNode.dataset.section;\r\n    }\r\n    if(activeSection !== selectedSection) {\r\n      setActiveSection(selectedSection);\r\n      props.controlMethods.setFlagShowSidePanel(true);\r\n    } else {\r\n      props.controlMethods.toggleSidePanel();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={\"side-panel\" + (props.controlFlags.showSidePanel ? \"\" : \" hide\")}>\r\n\r\n      <div className=\"buttons-container\">\r\n        <button\r\n          data-section=\"fields\"\r\n          className={activeSection === \"fields\" ? \"active\" : \"\"}\r\n          onPointerDown={handlePointerDown}>\r\n          <span className=\"text\">Fields</span>\r\n        </button>\r\n        <button\r\n          data-section=\"format\"\r\n          className={activeSection === \"format\" ? \"active\" : \"\"}\r\n          onPointerDown={handlePointerDown}>\r\n          <span className=\"text\">Format</span>\r\n        </button>\r\n        <button\r\n          data-section=\"other\"\r\n          className={activeSection === \"other\" ? \"active\" : \"\"}\r\n          onPointerDown={handlePointerDown}>\r\n          <span className=\"text\">Other</span>\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"sections-container\">\r\n        <TableFields activeSection={activeSection} dataStructure={props.dataStructure} />\r\n        <CardFormat activeSection={activeSection} cardMethods={props.cardMethods} />\r\n        <Other activeSection={activeSection} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidePanel;","import React from 'react';\r\nimport './BarChart.css';\r\n\r\n// const data = [\r\n//   {x: 0, y: 0},\r\n//   {x: 10, y: 10},\r\n//   {x: 20, y: 15},\r\n//   {x: 30, y: 20},\r\n//   {x: 40, y: 25},\r\n//   {x: 50, y: 30},\r\n//   {x: 60, y: 40},\r\n//   {x: 70, y: 5},\r\n//   {x: 80, y: 20},\r\n//   {x: 90, y: 10},\r\n//   {x: 100, y: 0},\r\n//   {x: 110, y: 0}\r\n// ];\r\n\r\nfunction BarChart(props) {\r\n\r\n  const chartWidth = props.cardInfo.size.width - 2 * props.borderWidth;\r\n  const chartHeight = props.cardInfo.size.height - 2 * props.borderWidth;\r\n\r\n  const originLeft = 20;\r\n  const originTop = chartHeight - 20;\r\n\r\n  const axisMarginLeft = originLeft * 0.5;\r\n  const axisMarginRight = chartWidth - originLeft;\r\n  const axisMarginTop = chartHeight - originTop;\r\n  const axisMarginBottom = chartHeight - (chartHeight - originTop) * 0.5;\r\n\r\n  const axisHorizontalLength = axisMarginRight - axisMarginLeft;\r\n  const axisVerticalLength = axisMarginBottom - axisMarginTop;\r\n\r\n  const tickMinorLength = 5;\r\n  const tickMajorLength = 8;\r\n\r\n  // const xMin = 10;\r\n  // const xMax = 10;\r\n  \r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox={\"0 0 \" + chartWidth + \" \" + chartHeight}\r\n      className=\"bar-chart\"\r\n      width={chartWidth}\r\n      height={chartHeight} >\r\n\r\n      {/* <!-- Fondo --> */}\r\n      <g>\r\n        <rect className=\"background\" x=\"0\" y=\"0\"\r\n          width={chartWidth}\r\n          height={chartHeight} ry=\"0\" />\r\n        <text x=\"30\" y=\"30\">{chartWidth}</text>\r\n        <text x=\"30\" y=\"50\">{\"Show legend: \" + props.cardInfo.contentOptions.showLegend}</text>\r\n      </g>\r\n\r\n      {/* <!-- Ejes --> */}\r\n      <g>\r\n        <g>\r\n          {/* <!-- Eje horizontal --> */}\r\n          <g>\r\n            <path d={\"M \" + axisMarginLeft + \",\" + originTop + \" h \" + axisHorizontalLength} />\r\n            <g>\r\n              {/* <!-- Axis ticks --> */}\r\n              <path d={\"M 30,\" + originTop + \" v \" + tickMinorLength} />\r\n              <path d={\"M 40,\" + originTop + \" v \" + tickMinorLength} />\r\n              <path d={\"M 50,\" + originTop + \" v \" + tickMinorLength} />\r\n              <path d={\"M 60,\" + originTop + \" v \" + tickMinorLength} />\r\n              <path d={\"M 70,\" + originTop + \" v \" + tickMajorLength} />\r\n              <path d={\"M 80,\" + originTop + \" v \" + tickMinorLength} />\r\n              <path d={\"M 90,\" + originTop + \" v \" + tickMinorLength} />\r\n              <path d={\"M 100,\" + originTop + \" v \" + tickMinorLength} />\r\n              <path d={\"M 110,\" + originTop + \" v \" + tickMinorLength} />\r\n              <path d={\"M 120,\" + originTop + \" v \" + tickMajorLength} />\r\n            </g>\r\n          </g>\r\n\r\n          {/* <!-- Eje vertical --> */}\r\n          <g>\r\n            <path d={\"M \" + originLeft + \",\" + axisMarginTop + \" v \" + axisVerticalLength} />\r\n            <g>\r\n              {/* <!-- Axis ticks --> */}\r\n              <path d={\"M \" + originLeft + \", 110 h -\" + tickMinorLength} />\r\n              <path d={\"M \" + originLeft + \", 100 h -\" + tickMinorLength} />\r\n              <path d={\"M \" + originLeft + \", 90 h -\" + tickMinorLength} />\r\n              <path d={\"M \" + originLeft + \", 80 h -\" + tickMinorLength} />\r\n              <path d={\"M \" + originLeft + \", 70 h -\" + tickMajorLength} />\r\n              <path d={\"M \" + originLeft + \", 60 h -\" + tickMinorLength} />\r\n              <path d={\"M \" + originLeft + \", 60 h -\" + tickMinorLength} />\r\n              <path d={\"M \" + originLeft + \", 50 h -\" + tickMinorLength} />\r\n              <path d={\"M \" + originLeft + \", 40 h -\" + tickMinorLength} />\r\n              <path d={\"M \" + originLeft + \", 30 h -\" + tickMajorLength} />\r\n            </g>\r\n          </g>\r\n        </g>\r\n      </g>\r\n\r\n      {/* <!-- Grilla --> */}\r\n      <g>\r\n        <g>\r\n          <g>\r\n            {/* <!-- <path d=\"m 63.210516,71.81547 v 80.88692\" /> --> */}\r\n            {/* <!-- <path d=\"M 80.726683,71.815471 V 152.70239\" /> --> */}\r\n            {/* <!-- <path d=\"M 99.765995,71.815464 V 152.70239\" /> --> */}\r\n          </g>\r\n          <g>\r\n            {/* <!-- <path d=\"m 183.69642,90.246341 -137.583327,10e-7\" /> --> */}\r\n            {/* <!-- <path d=\"M 183.69642,115.13125 H 46.113087\" /> --> */}\r\n          </g>\r\n        </g>\r\n      </g>\r\n\r\n      {/* <!-- Barras --> */}\r\n      <g>\r\n        <rect x=\"20\" y=\"60\" width=\"20\" height=\"20\" className=\"bar\" />\r\n        <rect x=\"60\" y=\"40\" width=\"20\" height=\"50\" className=\"bar\" />\r\n      </g>\r\n\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default BarChart;","import React from 'react';\r\nimport './PieChart.css';\r\n\r\nfunction PieChart(props) {\r\n  return (\r\n    <svg\r\n      className=\"pie-chart\">\r\n      <text x=\"0\" y=\"20\">Pie chart</text>\r\n      <rect cx=\"0\" cy=\"0\" width=\"10\" height=\"10\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default PieChart;","import React from 'react';\r\nimport './LineChart.css';\r\nimport { Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\nimport { LineChart as LineChartRecharts } from 'recharts';\r\n\r\nconst data = [\r\n  {\r\n    name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\r\n  },\r\n  {\r\n    name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\r\n  },\r\n  {\r\n    name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\r\n  },\r\n  {\r\n    name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\r\n  },\r\n  {\r\n    name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\r\n  },\r\n  {\r\n    name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\r\n  },\r\n  {\r\n    name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\r\n  },\r\n];\r\n\r\nfunction LineChart(props) {\r\n  const chartWidth = props.cardInfo.size.width - 2 * props.borderWidth;\r\n  const chartHeight = props.cardInfo.size.height - 2 * props.borderWidth;\r\n  return (\r\n    <LineChartRecharts\r\n      width={chartWidth}\r\n      height={chartHeight}\r\n      data={data}\r\n      margin={{\r\n        top: 5, right: 30, left: 20, bottom: 5,\r\n      }}\r\n    >\r\n      <CartesianGrid strokeDasharray=\"3 3\" />\r\n      <XAxis dataKey=\"name\" />\r\n      <YAxis />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n      <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n    </LineChartRecharts>\r\n  );\r\n}\r\n\r\nexport default LineChart;","import React from 'react';\r\nimport './BarChart2.css';\r\nimport { CartesianGrid, XAxis, YAxis, Tooltip, Legend, Bar } from 'recharts';\r\nimport { BarChart as BarChartRecharts } from 'recharts';\r\n\r\nconst data = [\r\n  {x: 0, y: 0},\r\n  {x: 10, y: 10},\r\n  {x: 20, y: 15},\r\n  {x: 30, y: 20},\r\n  {x: 40, y: 25},\r\n  {x: 50, y: 30},\r\n  {x: 60, y: 40},\r\n  {x: 70, y: 5},\r\n  {x: 80, y: 20},\r\n  {x: 90, y: 10},\r\n  {x: 100, y: 0},\r\n  {x: 110, y: 0}\r\n];\r\n\r\nfunction BarChart2(props) {\r\n\r\n  const chartWidth = props.cardInfo.size.width - 2 * props.borderWidth;\r\n  const chartHeight = props.cardInfo.size.height - 2 * props.borderWidth;\r\n\r\n//   const originLeft = 20;\r\n//   const originTop = chartHeight - 20;\r\n\r\n//   const axisMarginLeft = originLeft * 0.5;\r\n//   const axisMarginRight = chartWidth - originLeft;\r\n//   const axisMarginTop = chartHeight - originTop;\r\n//   const axisMarginBottom = chartHeight - (chartHeight - originTop) * 0.5;\r\n\r\n//   const axisHorizontalLength = axisMarginRight - axisMarginLeft;\r\n//   const axisVerticalLength = axisMarginBottom - axisMarginTop;\r\n\r\n//   const tickMinorLength = 5;\r\n//   const tickMajorLength = 8;\r\n\r\n  // const xMin = 10;\r\n  // const xMax = 10;\r\n  \r\n  return (\r\n    <BarChartRecharts width={chartWidth} height={chartHeight} data={data}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend layout=\"horizontal\" verticalAlign=\"bottom\" iconType=\"square\" iconSize={3} />\r\n        <Bar dataKey=\"x\" fill=\"#8884d8\" />\r\n        <Bar dataKey=\"y\" fill=\"#82ca9d\" />\r\n    </BarChartRecharts>\r\n  );\r\n}\r\n\r\nexport default BarChart2;","import React, { useCallback } from 'react';\r\nimport './MetaCard.css';\r\nimport BarChart from '../card-content/charts/BarChart.js';\r\nimport PieChart from '../card-content/charts/PieChart.js';\r\nimport LineChart from '../card-content/charts/LineChart.js';\r\nimport BarChart2 from '../card-content/charts/BarChart2.js';\r\n\r\nconst METACARD_BORDER_WIDTH = 1;\r\n\r\nfunction MetaCard(props) {\r\n\r\n  const Contents = useCallback((props) => {\r\n    switch (props.cardInfo.type) {\r\n      case \"barchart\":\r\n        return <BarChart {...props}/>\r\n      case \"piechart\":\r\n        return <PieChart {...props}/>\r\n      case \"linechart\":\r\n        return <LineChart {...props}/>\r\n      case \"barchart2\":\r\n        return <BarChart2 {...props}/> \r\n      default:\r\n        // return <div>empty</div>\r\n        return <BarChart {...props}/>\r\n        // break;\r\n    }\r\n  }, []);\r\n\r\n  const selected = props.cardInfo.selected;\r\n\r\n  return (\r\n    <div\r\n      id={props.cardInfo.id}\r\n      className={\"resizeable-card-container\" + (selected ? \" selected\" : \"\") + (props.controlFlags.snapToGrid ? \" animate-all\" : \"\" ) + (props.dashboardFlags.overrideHoverPointers ? \" unset-cursors\" : \"\")}\r\n      style={{\r\n        left: props.cardInfo.pos.left + \"px\",\r\n        top: props.cardInfo.pos.top + \"px\",\r\n        backgroundColor: props.color\r\n      }}>\r\n      <div className=\"col-container\">\r\n        <div className=\"corner nw\" data-anchor={{ right: true, bottom: true }}></div>\r\n        <div className=\"border vertical left\" data-anchor={{ right: true, bottom: false }}></div>\r\n        <div className=\"corner sw\" data-anchor={{ right: true, bottom: false }}></div>\r\n      </div>\r\n\r\n      <div className=\"col-container\">\r\n        <div className=\"border horizontal top\" data-anchor={{ right: false, bottom: true }}></div>\r\n\r\n        <div\r\n          className=\"content\"\r\n          style={{\r\n            width: props.cardInfo.size.width + \"px\",\r\n            height: props.cardInfo.size.height + \"px\",\r\n            borderWidth: METACARD_BORDER_WIDTH\r\n          }}>\r\n            <Contents {...props} borderWidth={METACARD_BORDER_WIDTH} />\r\n          {/* {props.children} */}\r\n          {/* {\"Debug info: \" + debugInfo} */}\r\n          {/* {\"controller index: \" + controllerPointerIndex} */}\r\n        </div>\r\n        <div className=\"border horizontal bottom\" data-anchor={{ right: false, bottom: false }}></div>\r\n      </div>\r\n\r\n      <div className=\"col-container\">\r\n        <div className=\"corner ne\" data-anchor={{ right: false, bottom: true }}></div>\r\n        <div className=\"border vertical right\" data-anchor={{ right: false, bottom: false }}></div>\r\n        <div className=\"corner se\" data-anchor={{ right: false, bottom: false }}></div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MetaCard;","import { useEffect, useState, useCallback, useLayoutEffect } from 'react';\r\n\r\n// const SELECTION_RECT_BORDER_WIDTH = 2;\r\n\r\nfunction useDashboardEventHandlers(dashboardId, selRectBorderWidth, cardMethods, controlMethods, controlFlags) {\r\n\r\n  const [allowResize, setAllowResize] = useState({ width: false, height: false });\r\n  const [allowMove, setAllowMove] = useState(false);\r\n\r\n  const [lastClickedPos, setLastClickedPos] = useState({ x: 0, y: 0 });\r\n  const [anchor, setAnchor] = useState({ right: false, bottom: false });\r\n  const [lastContainerClicked, setLastContainerClicked] = useState(null);\r\n  const [flagOverrideHoverPointers, setFlagOverrideHoverPointers] = useState(false);\r\n  const [lockCtrlKey, setLockCtrlKey] = useState(false);\r\n  const [selectionRectangleProps, setSelectionRectangleProps] = useState({\r\n    flagDraw: false,\r\n    pos: { left: 0, top: 0 },\r\n    size: { width: 0, height: 0 },\r\n    borderWidth: selRectBorderWidth\r\n  });\r\n  const [flagPointerDown, setFlagPointerDown] = useState(false);\r\n  // const [flagAllowRectangleSelect, setFlagAllowRectangleSelect] = useState(false);\r\n  // const setFlagAllowRectangleSelect = useCallback((newFlag) => {\r\n  //   controlMethods.setFlagAllowSelection(newFlag);\r\n  // }, []);\r\n  // const flagAllowRectangleSelect = controlFlags.allowSelection;\r\n  // const [flagIsLongPress, setFlagIsLongPress] = useState(false);\r\n  // const [flagWaitingLongPress, setFlagWaitingLongPress] = useState(false);\r\n  // const [timerLongPress, setTimerLongPress] = useState(null);\r\n  // const [dashboardScrollSize, setDashboardScrollSize] = useState({\r\n  //   width: \"100%\",\r\n  //   height: \"100%\"\r\n  // })\r\n\r\n  // const dashboard = useMemo(() => {\r\n  //   return document.getElementById(dashboardId);\r\n  // }, [dashboardId]);\r\n\r\n  // Cursor handlers\r\n  const setBorderCursorGlobalClass = useCallback((isBorder, isCorner, isHorizontal, anchor) => {\r\n    let cursorClass = \"\"\r\n    if (isBorder) {\r\n      if (isHorizontal) {\r\n        cursorClass = \"ns-resize\";\r\n      } else {\r\n        cursorClass = \"ew-resize\";\r\n      }\r\n    } else {\r\n      if (isCorner) {// It is a corner\r\n        const anchorsEncoded = [+anchor.right, +anchor.bottom].join(\"\");\r\n        const cornerCursorClassByAnchors = {\r\n          \"00\": \"se-resize\",\r\n          \"01\": \"ne-resize\",\r\n          \"10\": \"sw-resize\",\r\n          \"11\": \"nw-resize\"\r\n        }\r\n        cursorClass = cornerCursorClassByAnchors[anchorsEncoded];\r\n      } else {\r\n        cursorClass = \"normal\";\r\n      }\r\n    }\r\n    const dashboard = document.getElementById(dashboardId);\r\n    dashboard.style.setProperty(\"cursor\", cursorClass);\r\n  }, [dashboardId]);\r\n\r\n  const clearBorderCursorGlobalClass = useCallback(() => {\r\n    const dashboard = document.getElementById(dashboardId);\r\n    dashboard.style.removeProperty(\"cursor\");\r\n  }, [dashboardId]);\r\n\r\n  const containedInCardContainer = useCallback((element) => {\r\n    let a = element;\r\n    while (a) {\r\n      if (Array.from(a.classList).includes(\"resizeable-card-container\")) {\r\n        return a;\r\n      } else {\r\n        a = a.parentElement;\r\n      }\r\n    }\r\n    return null;\r\n  }, []);\r\n  // ---------------------------------------------------------------------------\r\n\r\n  // Pointer down\r\n  useEffect(() => {\r\n    const dashboard = document.getElementById(dashboardId);\r\n    const handlePointerDown = (e) => {\r\n      e.preventDefault();\r\n      setFlagPointerDown(true);\r\n      setLastClickedPos({ x: e.pageX, y: e.pageY });\r\n\r\n      // Did the user click on a card? If so, the function returns the card\r\n      // container element. If not, \"false\" is returned instead.\r\n      const cardContainer = containedInCardContainer(e.target);\r\n\r\n      if (cardContainer !== null) {\r\n\r\n        cardMethods.__updatePropsBeforeChange();\r\n        setLastContainerClicked(cardContainer);\r\n\r\n        const cardId = cardContainer.id;\r\n\r\n        if (e.shiftKey === true) {\r\n          cardMethods.toggleSelect(cardId);\r\n        } else {\r\n\r\n          // If not currently selected, clear previous selection and select the\r\n          // clicked card.\r\n          if (cardMethods.isSelected(cardId) === false) {\r\n            cardMethods.clearSelection();\r\n            cardMethods.toggleSelect(cardId);\r\n          }\r\n\r\n          const classesTargetElement = Array.from(e.target.classList);\r\n          const isBorder = classesTargetElement.includes(\"border\");\r\n          const isCorner = classesTargetElement.includes(\"corner\");\r\n\r\n          if (isBorder || isCorner) {\r\n\r\n            const isHor = classesTargetElement.includes(\"horizontal\");\r\n            // const isVer = classesTargetElement.includes(\"vertical\");\r\n\r\n            const leftClasses = [\"left\", \"nw\", \"sw\"];\r\n            const isLeft = classesTargetElement.some((el) => leftClasses.includes(el));\r\n\r\n            const topClasses = [\"top\", \"nw\", \"ne\"];\r\n            const isTop = classesTargetElement.some((el) => topClasses.includes(el));\r\n\r\n            const newAnchor = {\r\n              right: isLeft,\r\n              bottom: isTop\r\n            }\r\n            setAnchor(newAnchor);\r\n\r\n            setAllowResize({\r\n              width: !isHor || isCorner,\r\n              height: isHor || isCorner\r\n            });\r\n\r\n            setBorderCursorGlobalClass(isBorder, isCorner, isHor, newAnchor);\r\n            setFlagOverrideHoverPointers(true);\r\n\r\n          } else {\r\n            setAllowMove(true);\r\n          }\r\n        }\r\n      } else {\r\n        if (e.ctrlKey === true) {\r\n          const dashboardRect = dashboard.getBoundingClientRect();\r\n          cardMethods.add({\r\n            pos: {\r\n              left: e.pageX - dashboardRect.left + dashboard.scrollLeft,\r\n              top: e.pageY - dashboardRect.top + dashboard.scrollTop\r\n            }\r\n          });\r\n        } else {\r\n          // If no card was clicked, and if the ctrl and shift keys were not\r\n          // pressed, we can clear the selection.\r\n          if (!e.shiftKey) {\r\n            cardMethods.clearSelection();\r\n          }\r\n\r\n          // if (e.pointerType === \"touch\") {\r\n          //   // e.preventDefault();\r\n          //   setFlagWaitingLongPress(true);\r\n          //   const timer = window.setTimeout(() => {\r\n          //     controlMethods.setFlagAllowSelection(true);\r\n          //   }, 400);\r\n          //   setTimerLongPress(timer);\r\n          // } else {\r\n          //   controlMethods.setFlagAllowSelection(true);\r\n          // }\r\n          if (e.pointerType !== \"touch\") {\r\n            controlMethods.setFlagAllowSelection(true);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    dashboard.addEventListener(\"pointerdown\", handlePointerDown, false);\r\n    return () => dashboard.removeEventListener(\"pointerdown\", handlePointerDown, false);\r\n  }, [\r\n    cardMethods, // Ok?\r\n    dashboardId, // Ok\r\n    setBorderCursorGlobalClass, // Ok?\r\n    containedInCardContainer, // Ok\r\n    controlMethods // Ok?\r\n  ]);\r\n\r\n  // Pointer move\r\n  useLayoutEffect(() => {\r\n\r\n    const dashboard = document.getElementById(dashboardId);\r\n\r\n    const handlePointerMove = (e) => {\r\n      e.preventDefault();\r\n      const translation = {\r\n        x: e.pageX - lastClickedPos.x,\r\n        y: e.pageY - lastClickedPos.y\r\n      }\r\n      // const pointerTravelledDistance = Math.sqrt(translation.x * translation.x + translation.y * translation.y);\r\n\r\n      if (allowMove) {\r\n\r\n        if (e.shiftKey === false) {\r\n          cardMethods.translateSelected(translation);\r\n        } else {\r\n          const priorizeX = Math.abs(translation.x) > Math.abs(translation.y);\r\n          const priorizeY = !priorizeX;\r\n\r\n          const restrictedTranslation = {\r\n            x: priorizeX ? translation.x : 0,\r\n            y: priorizeY ? translation.y : 0\r\n          }\r\n          cardMethods.translateSelected(restrictedTranslation);\r\n        }\r\n      } else {\r\n        if (allowResize.width || allowResize.height) {\r\n\r\n          const resizeTranslation = {\r\n            x: allowResize.width ? translation.x : 0,\r\n            y: allowResize.height ? translation.y : 0\r\n          };\r\n          cardMethods.resize(lastContainerClicked.id, resizeTranslation, allowResize, anchor);\r\n        } else {\r\n          if (flagPointerDown) {\r\n            if (controlFlags.allowSelection) {\r\n              const dashboardRect = dashboard.getBoundingClientRect();\r\n              const newSelectionRectangleProps = {\r\n                flagDraw: true,\r\n                pos: {\r\n                  left: Math.round(Math.min(lastClickedPos.x, e.pageX) - dashboardRect.left + dashboard.scrollLeft, 0),\r\n                  top: Math.round(Math.min(lastClickedPos.y, e.pageY) - dashboardRect.top + dashboard.scrollTop, 0)\r\n                },\r\n                size: {\r\n                  width: Math.round(Math.abs(e.pageX - lastClickedPos.x), 0),\r\n                  height: Math.round(Math.abs(e.pageY - lastClickedPos.y), 0)\r\n                },\r\n                borderWidth: selRectBorderWidth\r\n              };\r\n              // console.log(JSON.stringify(e.offsetX + \"-\" + e.offsetY));\r\n              setSelectionRectangleProps(newSelectionRectangleProps);\r\n              const flagExpandCurrentSelection = e.shiftKey;\r\n              cardMethods.selectWithRectangle(\r\n                newSelectionRectangleProps,\r\n                flagExpandCurrentSelection);\r\n            } //else {\r\n            //   if (e.pointerType === \"touch\" && flagWaitingLongPress && pointerTravelledDistance > 0) {\r\n            //     window.clearTimeout(timerLongPress);\r\n            //     setTimerLongPress(null);\r\n            //     setFlagWaitingLongPress(false);\r\n            //   }\r\n            // }\r\n          }\r\n        }\r\n      }\r\n      // if (allowMove || allowResize.width || allowResize.height) {\r\n      //   // console.log(\"ran\");\r\n      //   setDashboardScrollSize({\r\n      //     width: dashboard.scrollWidth,\r\n      //     height: dashboard.scrollHeight\r\n      //   });\r\n      // }\r\n    }\r\n    dashboard.addEventListener(\"pointermove\", handlePointerMove, false);\r\n    return () => dashboard.removeEventListener(\"pointermove\", handlePointerMove, false);\r\n  }, [\r\n    cardMethods, // ok?\r\n    dashboardId, // ok\r\n    allowMove, // ok\r\n    allowResize, // ok\r\n    anchor, // ok\r\n    lastClickedPos, // ok\r\n    lastContainerClicked, // ok\r\n    flagPointerDown, // ok\r\n    controlFlags.allowSelection, // ok\r\n    selRectBorderWidth // ok?\r\n    //flagWaitingLongPress, // ok\r\n    //timerLongPress\r\n  ]);\r\n\r\n  // Pointer up\r\n  useEffect(() => {\r\n    const dashboard = document.getElementById(dashboardId);\r\n    const handlePointerUp = (e) => {\r\n      // e.preventDefault();\r\n      // Disallow both movement and resizing.\r\n      setFlagPointerDown(false);\r\n      setAllowResize({ width: false, height: false });\r\n      setAllowMove(false);\r\n      clearBorderCursorGlobalClass();\r\n      setFlagOverrideHoverPointers(false);\r\n      setSelectionRectangleProps({\r\n        flagDraw: false,\r\n        pos: { left: 0, top: 0 },\r\n        size: { width: 0, height: 0 },\r\n        borderWidth: selRectBorderWidth\r\n      });\r\n      // setFlagAllowRectangleSelect(false);\r\n      controlMethods.setFlagAllowSelection(false);\r\n      // if (e.pointerType === \"touch\" && timerLongPress !== null) {\r\n      //   window.clearTimeout(timerLongPress);\r\n      // }\r\n    }\r\n    dashboard.addEventListener(\"pointerup\", handlePointerUp, false);\r\n    return () => dashboard.removeEventListener(\"pointerup\", handlePointerUp, false);\r\n  }, [\r\n    cardMethods, // Ok?\r\n    dashboardId, // Ok\r\n    clearBorderCursorGlobalClass, // Ok?\r\n    controlMethods, // Ok?\r\n    selRectBorderWidth // ok?\r\n    //timerLongPress, // Ok?\r\n  ]);\r\n\r\n  // Key down\r\n  useEffect(() => {\r\n\r\n    const handleKeyDown = (e) => {\r\n      switch (e.key) {\r\n        case \"Escape\":\r\n          cardMethods.clearSelection();\r\n          break;\r\n        case \"Delete\":\r\n          cardMethods.deleteSelected();\r\n          break;\r\n        case \"Control\":\r\n          if (!lockCtrlKey) {\r\n            controlMethods.toggleSnapToGrid();\r\n            setLockCtrlKey(true);\r\n          }\r\n          break;\r\n        case \"Backspace\":\r\n          cardMethods.deleteSelected();\r\n          break;\r\n        default:\r\n          // alert(keyboardInfo.lastKeyPressed);\r\n          break;\r\n      }\r\n    }\r\n\r\n    const handleKeyUp = (e) => {\r\n      switch (e.key) {\r\n        case \"Escape\":\r\n          break;\r\n        case \"Delete\":\r\n          break;\r\n        case \"Control\":\r\n          controlMethods.toggleSnapToGrid();\r\n          setLockCtrlKey(false);\r\n          break;\r\n        case \"Backspace\":\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    window.addEventListener(\"keydown\", handleKeyDown, false);\r\n    window.addEventListener(\"keyup\", handleKeyUp, false);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown, false);\r\n      window.removeEventListener(\"keyup\", handleKeyUp, false);\r\n    }\r\n\r\n  }, [cardMethods, controlMethods, lockCtrlKey]);\r\n\r\n  // const handlers = {\r\n  //   pointerDown: handlePointerDown,\r\n  //   pointerMove: handlePointerMove,\r\n  //   pointerUp: handlePointerUp\r\n  // }\r\n\r\n  // const scrollSize = useMemo(() => {\r\n  //   // const dashboard = document.getElementById(dashboardId);\r\n  //   const scrollWidth = dashboard === null ? 0 : dashboard.scrollWidth;\r\n  //   const scrollHeight = dashboard === null ? 0 : dashboard.scrollHeight;\r\n  //   return {\r\n  //     width: scrollWidth,\r\n  //     height: scrollHeight\r\n  //   }\r\n  // }, [dashboard, dashboard.scrollWidth, dashboard.scrollHeight]);\r\n\r\n  const debugInfo = JSON.stringify({\r\n    allowResize: allowResize,\r\n    allowMove: allowMove,\r\n    lastClickedPos: lastClickedPos,\r\n    anchor: anchor\r\n  });\r\n\r\n  const dashboardFlags = {\r\n    overrideHoverPointers: flagOverrideHoverPointers,\r\n    allowRectangleSelect: controlFlags.allowSelection,\r\n    pointerDown: flagPointerDown\r\n  }\r\n  const dashboardProps = {\r\n    debugInfo: debugInfo,\r\n    selectionRectangleProps: selectionRectangleProps\r\n    // scrollSize: dashboardScrollSize\r\n  }\r\n\r\n  return [dashboardFlags, dashboardProps];\r\n}\r\n\r\nexport default useDashboardEventHandlers;","import React from 'react';\r\nimport './SelectionRectangle.css';\r\n\r\nfunction SelectionRectangle(props) {\r\n  return (\r\n    <div\r\n      id={props.selRectId}\r\n      className={\"selection-rectangle\" + (props.selRectInfo.flagDraw ? \"\" : \" hide\")}\r\n      style={{\r\n        left: props.selRectInfo.pos.left,\r\n        top: props.selRectInfo.pos.top,\r\n        width: props.selRectInfo.size.width,\r\n        height: props.selRectInfo.size.height,\r\n        borderWidth: props.selRectInfo.borderWidth\r\n      }}>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectionRectangle;","import React from 'react';\r\nimport './Grid.css';\r\n\r\nfunction Grid(props) {\r\n  return (\r\n    <div\r\n      className=\"grid\" >\r\n      {\r\n        props.controlFlags.displayGrid === true &&\r\n        <span>\r\n          <div\r\n            className=\"small-grid\"></div>\r\n          <div\r\n            className=\"big-grid\"></div>\r\n        </span>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Grid;","import React, { useRef } from 'react';\r\nimport './DashboardContent.css';\r\nimport MetaCard from './components/meta-card/MetaCard.js';\r\nimport useDashboardEventHandlers from './customHooks/useDashboardEventHandlers.js';\r\nimport SelectionRectangle from './components/selection-rectangle/SelectionRectangle.js';\r\nimport Grid from './components/grid/Grid.js';\r\n\r\nconst DASHBOARD_ID = \"dashboard-content\";\r\nconst SELRECT_BORDERWIDTH = 2;\r\n\r\nfunction DashboardContent(props) {\r\n\r\n  const dashboardRef = useRef(null);\r\n\r\n  const [dashboardFlags, dashboardProps] = useDashboardEventHandlers(\r\n    DASHBOARD_ID,\r\n    SELRECT_BORDERWIDTH,\r\n    props.cardMethods,\r\n    props.controlMethods,\r\n    props.controlFlags);\r\n\r\n  return (\r\n    <div\r\n      id={DASHBOARD_ID}\r\n      // onPointerDown={dashboardMethods.onPointerDown}\r\n      className={\"dashboard-content\" + (dashboardFlags.allowRectangleSelect ? \" touch-action-none\" : \"\")}\r\n      ref={dashboardRef}>\r\n      <Grid\r\n        controlFlags={props.controlFlags}\r\n        controlProps={props.controlProps}\r\n        dashboardRef={dashboardRef} /> \r\n        {/* dashboardScrollSize={dashboardProps.scrollSize} /> */}\r\n      {/* <span className=\"debug-info\">{JSON.stringify(dashboardProps.scrollSize)}</span> */}\r\n      {\r\n        Array.from(props.cards.values()).map((cardInfo, i, arr) => {\r\n          return <MetaCard\r\n            key={i}\r\n            cardInfo={cardInfo}\r\n            dashboardFlags={dashboardFlags}\r\n            controlFlags={props.controlFlags} />\r\n        })\r\n      }\r\n      <SelectionRectangle selRectInfo={dashboardProps.selectionRectangleProps} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DashboardContent;","import React from 'react';\nimport './App.css';\n\n// Custom hooks-----------------------------------------------------------------\nimport useControls from './customHooks/useControls.js';\nimport useCards from './customHooks/useCards.js';\nimport useData from './customHooks/useData.js';\n// -----------------------------------------------------------------------------\n\n// Basic components-------------------------------------------------------------\nimport Controls from './components/controls/Controls.js';\nimport SidePanel from './components/side-panel/SidePanel.js';\nimport DashboardContent from './components/dashboard-content/DashboardContent.js';\n// -----------------------------------------------------------------------------\n\nfunction App() {\n\n  const [controlFlags, controlMethods] = useControls();\n  \n  const [cards, cardFlags, cardMethods] = useCards(controlFlags);\n  const [dataStructure, data] = useData();\n\n  return (\n    <div\n      className=\"App\">\n      \n      <Controls\n        cardFlags={cardFlags}\n        cardMethods={cardMethods}\n        controlFlags={controlFlags}\n        controlMethods={controlMethods} />\n\n      <div className=\"container-for-side-panel-and-content\">\n        \n        <SidePanel\n          controlFlags={controlFlags}\n          controlMethods={controlMethods}\n          dataStructure={dataStructure}\n          cardMethods={cardMethods} />\n        \n        <DashboardContent\n          cards={cards}\n          cardMethods={cardMethods}\n          controlFlags={controlFlags}\n          controlMethods={controlMethods}\n          data={data} />\n\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}