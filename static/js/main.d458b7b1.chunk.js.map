{"version":3,"sources":["customHooks/useControls.js","customHooks/useCards.js","customHooks/useData.js","components/controls/Controls.js","components/side-panel/components/fields-list/FieldsList.js","components/side-panel/SidePanel.js","components/dashboard-content/components/meta-card/MetaCard.js","components/dashboard-content/customHooks/useDashboardEventHandlers.js","components/dashboard-content/components/selection-rectangle/SelectionRectangle.js","components/dashboard-content/components/grid/Grid.js","components/dashboard-content/DashboardContent.js","App.js","serviceWorker.js","index.js"],"names":["useControls","useState","flagShowSidePanel","setFlagShowSidePanel","flagSnapToGrid","setFlagSnapToGrid","flagDisplayGrid","setFlagDisplayGrid","flagAllowSelection","setFlagAllowSelection","toggleSidePanel","useCallback","prevFlag","toggleSnapToGrid","toggleDisplayGrid","toggleFlagAllowSelection","showSidePanel","snapToGrid","displayGrid","allowSelection","DEFAULT_SIZE","width","GRID_UNIT_WIDTH","height","GRID_UNIT_HEIGHT","useCards","controlFlags","past","present","Map","future","cards","setCards","nextCardIndex","setNextCardIndex","moveCard","cardId","newPos","newPosControlled","left","Math","round","top","prevCard","get","newCards","set","id","pos","size","propsBeforeChange","selected","flags","concat","translateSelectedCards","translation","forEach","card","posBeforeMove","x","y","resizeCard","mouseTranslation","allowResize","anchor","prevSize","prevPos","nextPos","right","min","bottom","nextPosControlled","nextSize","max","nextWidthControlled","nextHeightControlled","nextSizeControlled","toggleCardSelection","addNewCard","startingPos","startingSize","undefined","allowMove","prevState","deleteCard","delete","deleteSelectedCards","flagDeletedSomething","__updatePropsBeforeChange","clearSelection","isCardSelected","has","Error","isCardInsideSelectionRect","cardPos","cardSize","rectProps","rectPos","rectSize","insideX","insideY","selectWithRectangle","rectangleProps","flagExpandCurrentSelection","flagSelect","undo","length","slice","redo","cardFlags","canUndo","canRedo","cardMethods","add","move","translateSelected","resize","isSelected","toggleSelect","deleteSelected","useData","dataStructure","fields","Controls","props","className","onPointerDown","controlMethods","alt","FieldsList","flagExpanded","setFlagExpanded","onPointerUp","e","target","innerHTML","tableStructure","map","field","i","arr","key","SidePanel","activeSection","setActiveSection","handlePointerDown","selectedSection","dataset","section","parentNode","data-section","Array","from","values","MetaCard","cardInfo","dashboardFlags","overrideHoverPointers","style","backgroundColor","color","data-anchor","useDashboardEventHandlers","dashboardId","setAllowResize","setAllowMove","lastClickedPos","setLastClickedPos","setAnchor","lastContainerClicked","setLastContainerClicked","flagOverrideHoverPointers","setFlagOverrideHoverPointers","lockCtrlKey","setLockCtrlKey","flagDraw","selectionRectangleProps","setSelectionRectangleProps","flagPointerDown","setFlagPointerDown","setBorderCursorGlobalClass","isBorder","isCorner","isHorizontal","cursorClass","join","document","getElementById","setProperty","clearBorderCursorGlobalClass","removeProperty","containedInCardContainer","element","a","classList","includes","parentElement","useEffect","dashboard","preventDefault","pageX","pageY","cardContainer","shiftKey","classesTargetElement","isHor","leftClasses","isLeft","some","el","topClasses","newAnchor","ctrlKey","dashboardRect","getBoundingClientRect","scrollLeft","scrollTop","pointerType","addEventListener","removeEventListener","useLayoutEffect","handlePointerMove","priorizeX","abs","restrictedTranslation","resizeTranslation","newSelectionRectangleProps","handlePointerUp","handleKeyDown","handleKeyUp","window","debugInfo","JSON","stringify","allowRectangleSelect","pointerDown","SelectionRectangle","selRectInfo","Grid","DashboardContent","dashboardRef","useRef","dashboardProps","ref","controlProps","App","data","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d458b7b1.chunk.js","sourcesContent":["import { useState, useCallback } from 'react';\r\n\r\nfunction useControls() {\r\n\r\n  const [flagShowSidePanel, setFlagShowSidePanel] = useState(true);\r\n  const [flagSnapToGrid, setFlagSnapToGrid] = useState(false);\r\n  const [flagDisplayGrid, setFlagDisplayGrid] = useState(true);\r\n  const [flagAllowSelection, setFlagAllowSelection] = useState(false);\r\n  // const [gridSize, setGridSize] = useState({\r\n  //   width: \"100%\",\r\n  //   height: \"100%\"\r\n  // })\r\n  // const [lockGridSetting, setLockGridSetting] = useState(false);\r\n\r\n  const toggleSidePanel = useCallback(() => {\r\n    setFlagShowSidePanel(prevFlag => !prevFlag);\r\n  }, []);\r\n\r\n  const toggleSnapToGrid = useCallback(() => {\r\n    setFlagSnapToGrid(prevFlag => !prevFlag);\r\n  }, []);\r\n\r\n  const toggleDisplayGrid = useCallback(() => {\r\n    setFlagDisplayGrid(prevFlag => !prevFlag);\r\n  }, []);\r\n\r\n  const toggleFlagAllowSelection = useCallback(() => {\r\n    setFlagAllowSelection(prevFlag => !prevFlag);\r\n  }, []);\r\n\r\n  // const setGridWidth = useCallback((newWidth) => {\r\n  //   setGridSize(prevSize => ({\r\n  //     width: newWidth,\r\n  //     height: prevSize.height\r\n  //   }));\r\n  // }, []);\r\n\r\n  // const setGridHeight = useCallback((newHeight) => {\r\n  //   setGridSize(prevSize => ({\r\n  //     width: prevSize.width,\r\n  //     height: newHeight\r\n  //   }));\r\n  // }, []);\r\n\r\n\r\n  // // Handle Alt key press and release.------------------------------------------\r\n  // useEffect(() => {\r\n  //   if (keyboardInfo.altPressed === true) {\r\n  //     if (lockGridSetting === false) {\r\n  //       setLockGridSetting(true);\r\n  //       toggleSnapToGrid();\r\n  //     }\r\n  //   } else {\r\n  //     if (lockGridSetting === true) {\r\n  //       setLockGridSetting(false);\r\n  //       toggleSnapToGrid();\r\n  //     }\r\n  //   }\r\n  // }, [keyboardInfo.altPressed, lockGridSetting, toggleSnapToGrid]);\r\n  // // ---------------------------------------------------------------------------\r\n\r\n\r\n\r\n  const controlFlags = {\r\n    showSidePanel: flagShowSidePanel,\r\n    snapToGrid: flagSnapToGrid,\r\n    displayGrid: flagDisplayGrid,\r\n    allowSelection: flagAllowSelection\r\n  };\r\n  // const controlProps = {\r\n  //   gridSize: gridSize\r\n  // }\r\n  const controlMethods = {\r\n    setFlagShowSidePanel: setFlagShowSidePanel,\r\n    toggleSidePanel: toggleSidePanel,\r\n    toggleSnapToGrid: toggleSnapToGrid,\r\n    toggleDisplayGrid: toggleDisplayGrid,\r\n    toggleFlagAllowSelection: toggleFlagAllowSelection,\r\n    setFlagAllowSelection: setFlagAllowSelection,\r\n    // setGridSize: setGridSize,\r\n    // setGridWidth: setGridWidth,\r\n    // setGridHeight: setGridHeight\r\n  };\r\n\r\n  return [controlFlags, controlMethods];\r\n}\r\n\r\nexport default useControls;","import { useState, useCallback } from 'react';\r\n\r\nconst GRID_UNIT_WIDTH = 20;\r\nconst GRID_UNIT_HEIGHT = 20;\r\n\r\nconst MIN_WIDHT = GRID_UNIT_WIDTH * 2;\r\nconst MIN_HEIGHT = GRID_UNIT_HEIGHT * 2;\r\nconst DEFAULT_WIDTH = GRID_UNIT_WIDTH * 3 * 2;\r\nconst DEFAULT_HEIGHT = GRID_UNIT_HEIGHT * 3 * 3;\r\nconst DEFAULT_SIZE = { width: DEFAULT_WIDTH, height: DEFAULT_HEIGHT };\r\n\r\nfunction useCards(controlFlags) {\r\n\r\n  const [cards, setCards] = useState({\r\n    past: [],\r\n    present: new Map(),\r\n    future: []\r\n  });\r\n  // const [cardsPast, setCardsPast] = useState([]);\r\n  // const [cardsFuture, setCardsFuture] = useState([]);\r\n\r\n  const [nextCardIndex, setNextCardIndex] = useState(0);\r\n\r\n  const moveCard = useCallback((cardId, newPos) => {\r\n    const newPosControlled = {\r\n      left: controlFlags.snapToGrid ? Math.round(newPos.left / GRID_UNIT_WIDTH, 0) * GRID_UNIT_WIDTH : newPos.left,\r\n      top: controlFlags.snapToGrid ? Math.round(newPos.top / GRID_UNIT_WIDTH, 0) * GRID_UNIT_WIDTH : newPos.top\r\n    }\r\n    setCards(cards => {\r\n      const prevCard = cards.present.get(cardId);\r\n      let newCards = new Map(cards.present);\r\n      newCards.set(cardId, {\r\n        id: prevCard.id,\r\n        pos: newPosControlled,\r\n        size: prevCard.size,\r\n        propsBeforeChange: prevCard.propsBeforeChange,\r\n        selected: prevCard.selected,\r\n        flags: prevCard.flags\r\n      });\r\n      return {\r\n        past: cards.past.concat([cards.present]),\r\n        present: newCards,\r\n        future: []\r\n      };\r\n    });\r\n  }, [controlFlags.snapToGrid]);\r\n\r\n  const translateSelectedCards = useCallback((translation) => {\r\n    setCards(cards => {\r\n      let newCards = new Map(cards.present);\r\n      newCards.forEach(card => {\r\n        if (card.selected === true) {\r\n          const posBeforeMove = card.propsBeforeChange.pos;\r\n          const newPos = {\r\n            left: posBeforeMove.left + translation.x,\r\n            top: posBeforeMove.top + translation.y\r\n          };\r\n          const newPosControlled = {\r\n            left: controlFlags.snapToGrid ? Math.round(newPos.left / GRID_UNIT_WIDTH, 0) * GRID_UNIT_WIDTH : newPos.left,\r\n            top: controlFlags.snapToGrid ? Math.round(newPos.top / GRID_UNIT_WIDTH, 0) * GRID_UNIT_WIDTH : newPos.top\r\n          }\r\n          newCards.set(card.id, {\r\n            id: card.id,\r\n            pos: newPosControlled,\r\n            size: card.size,\r\n            propsBeforeChange: card.propsBeforeChange,\r\n            selected: card.selected,\r\n            flags: card.flags\r\n          });\r\n        }\r\n      });\r\n      return {\r\n        past: cards.past, // we do not update the past until we fix the values of propsBeforeChange\r\n        present: newCards,\r\n        future: cards.future // we do not update the future until we fix the values of propsBeforeChange\r\n      };\r\n    });\r\n  }, [controlFlags.snapToGrid]);\r\n\r\n  const resizeCard = useCallback((cardId, mouseTranslation, allowResize, anchor) => {\r\n    setCards(cards => {\r\n      const prevCard = cards.present.get(cardId);\r\n      const prevSize = prevCard.propsBeforeChange.size;\r\n      const prevPos = prevCard.propsBeforeChange.pos;\r\n\r\n      const nextPos = {\r\n        left: anchor.right ? Math.min(prevPos.left + mouseTranslation.x, prevPos.left + prevSize.width - MIN_WIDHT) : prevPos.left,\r\n        top: anchor.bottom ? Math.min(prevPos.top + mouseTranslation.y, prevPos.top + prevSize.height - MIN_HEIGHT) : prevPos.top\r\n      }\r\n      const nextPosControlled = {\r\n        left: controlFlags.snapToGrid && anchor.right && allowResize.width ? Math.round(nextPos.left / GRID_UNIT_WIDTH, 0) * GRID_UNIT_WIDTH : nextPos.left,\r\n        top: controlFlags.snapToGrid && anchor.bottom && allowResize.height ? Math.round(nextPos.top / GRID_UNIT_WIDTH, 0) * GRID_UNIT_WIDTH : nextPos.top\r\n      }\r\n\r\n      const nextSize = {\r\n        width: Math.max(prevSize.width + mouseTranslation.x * (anchor.right ? -1 : 1), MIN_WIDHT),\r\n        height: Math.max(prevSize.height + mouseTranslation.y * (anchor.bottom ? -1 : 1), MIN_HEIGHT)\r\n      }\r\n      let nextWidthControlled = nextSize.width;\r\n      let nextHeightControlled = nextSize.height;\r\n      if (controlFlags.snapToGrid) {\r\n        if (allowResize.width) {\r\n          nextWidthControlled = anchor.right ? prevSize.width - (nextPosControlled.left - prevPos.left) : Math.round((prevPos.left + nextSize.width) / GRID_UNIT_WIDTH, 0) * GRID_UNIT_WIDTH - prevPos.left;\r\n        }\r\n        if (allowResize.height) {\r\n          nextHeightControlled = anchor.bottom ? prevSize.height - (nextPosControlled.top - prevPos.top) : Math.round((prevPos.top + nextSize.height) / GRID_UNIT_HEIGHT, 0) * GRID_UNIT_HEIGHT - prevPos.top;\r\n        }\r\n      }\r\n      // const nextSizeControlled = {\r\n      //   width: controlFlags.snapToGrid && (anchor.right === false) && allowResize.width ? Math.round(nextSize.width / GRID_UNIT_WIDTH, 0) * GRID_UNIT_WIDTH : nextSize.width,\r\n      //   height: controlFlags.snapToGrid && (anchor.bottom === false) && allowResize.height ? Math.round(nextSize.height / GRID_UNIT_WIDTH, 0) * GRID_UNIT_WIDTH : nextSize.height\r\n      // }\r\n      const nextSizeControlled = {\r\n        width: nextWidthControlled,\r\n        height: nextHeightControlled\r\n      }\r\n\r\n      let newCards = new Map(cards.present);\r\n      newCards.set(cardId, {\r\n        id: prevCard.id,\r\n        pos: nextPosControlled,\r\n        size: nextSizeControlled,\r\n        propsBeforeChange: prevCard.propsBeforeChange,\r\n        selected: prevCard.selected,\r\n        flags: prevCard.flags\r\n      });\r\n      return {\r\n        past: cards.past, // we do not update the past until we fix the values of propsBeforeChange\r\n        present: newCards,\r\n        future: cards.future // we do not update the future until we fix the values of propsBeforeChange\r\n      };\r\n    });\r\n  }, [controlFlags.snapToGrid]);\r\n\r\n  const toggleCardSelection = useCallback((cardId) => {\r\n    setCards(cards => {\r\n      const prevCard = cards.present.get(cardId);\r\n      let newCards = new Map(cards.present);\r\n      newCards.set(cardId, {\r\n        id: prevCard.id,\r\n        pos: prevCard.pos,\r\n        size: prevCard.size,\r\n        propsBeforeChange: prevCard.propsBeforeChange,\r\n        selected: !prevCard.selected,\r\n        flags: prevCard.flags\r\n      });\r\n      return {\r\n        past: cards.past, // no need to update the past when selecting a card\r\n        present: newCards,\r\n        future: cards.future // no need to update the future when selecting a card\r\n      };\r\n    });\r\n  }, []);\r\n\r\n  const addNewCard = useCallback((startingPos, startingSize) => {\r\n    if (startingSize === undefined) {\r\n      startingSize = DEFAULT_SIZE;\r\n    }\r\n    setCards(cards => {\r\n      let newCards = new Map(cards.present);\r\n      const cardId = \"card-\" + nextCardIndex;\r\n      newCards.set(cardId, {\r\n        id: cardId,\r\n        pos: startingPos,\r\n        size: startingSize,\r\n        propsBeforeChange: {\r\n          pos: startingPos,\r\n          size: startingSize\r\n        },\r\n        selected: false,\r\n        flags: {\r\n          allowResize: {\r\n            width: false,\r\n            height: false\r\n          },\r\n          allowMove: false\r\n        }\r\n      });\r\n      return {\r\n        past: cards.past.concat([cards.present]),\r\n        present: newCards,\r\n        future: []\r\n      };\r\n    });\r\n    setNextCardIndex((prevState) => prevState + 1);\r\n  }, [nextCardIndex]);\r\n\r\n  const deleteCard = useCallback((cardId) => {\r\n    setCards(cards => {\r\n      let newCards = new Map(cards.present);\r\n      newCards.delete(cardId);\r\n      return {\r\n        past: cards.past.concat([cards.present]),\r\n        present: newCards,\r\n        future: []\r\n      };\r\n    });\r\n  }, []);\r\n\r\n  const deleteSelectedCards = useCallback(() => {\r\n    setCards(cards => {\r\n      let flagDeletedSomething = false;\r\n      let newCards = new Map(cards.present);\r\n      newCards.forEach(card => {\r\n        if (card.selected === true) {\r\n          newCards.delete(card.id);\r\n          flagDeletedSomething = true;\r\n        }\r\n      });\r\n      return {\r\n        past: flagDeletedSomething ? cards.past.concat([cards.present]) : cards.past,\r\n        present: flagDeletedSomething ? newCards : cards.present,\r\n        future: flagDeletedSomething ? [] : cards.future\r\n      };\r\n    });\r\n  }, []);\r\n\r\n  const __updatePropsBeforeChange = useCallback(() => {\r\n    setCards(cards => {\r\n      let newCards = new Map(cards.present);\r\n      newCards.forEach(card => {\r\n        newCards.set(card.id, {\r\n          id: card.id,\r\n          pos: card.pos,\r\n          size: card.size,\r\n          propsBeforeChange: {\r\n            pos: card.pos,\r\n            size: card.size\r\n          },\r\n          selected: card.selected,\r\n          flags: card.flags\r\n        });\r\n      });\r\n      return {\r\n        past: cards.past.concat([cards.present]),\r\n        present: newCards,\r\n        future: []\r\n      };\r\n    });\r\n  }, []);\r\n\r\n  const clearSelection = useCallback(() => {\r\n    setCards(cards => {\r\n      let newCards = new Map(cards.present);\r\n      newCards.forEach(card => {\r\n        if (card.selected === true) {\r\n          newCards.set(card.id, {\r\n            id: card.id,\r\n            pos: card.pos,\r\n            size: card.size,\r\n            propsBeforeChange: card.propsBeforeChange,\r\n            selected: false,\r\n            flags: card.flags\r\n          });\r\n        }\r\n      });\r\n      return {\r\n        past: cards.past, // no need to update the past when clearing the selection\r\n        present: newCards,\r\n        future: cards.future // no need to update the future when clearing the selection\r\n      };\r\n    });\r\n  }, []);\r\n\r\n  const isCardSelected = useCallback((cardId) => {\r\n    if (cards.present.has(cardId) === true) {\r\n      return cards.present.get(cardId).selected;\r\n    } else {\r\n      return Error(\"cardId does not exist.\");\r\n    }\r\n  }, [cards.present]);\r\n\r\n  const isCardInsideSelectionRect = useCallback((cardPos, cardSize, rectProps) => {\r\n    const rectPos = rectProps.pos;\r\n    const rectSize = rectProps.size;\r\n    const insideX = (cardPos.left >= rectPos.left) && (cardPos.left + cardSize.width <= rectPos.left + rectSize.width);\r\n    const insideY = (cardPos.top >= rectPos.top) && (cardPos.top + cardSize.height <= rectPos.top + rectSize.height);\r\n    return insideX && insideY;\r\n  }, []);\r\n\r\n  const selectWithRectangle = useCallback((rectangleProps, flagExpandCurrentSelection) => {\r\n    setCards(cards => {\r\n      let newCards = new Map(cards.present);\r\n      newCards.forEach(card => {\r\n        const flagSelect = isCardInsideSelectionRect(\r\n          card.pos,\r\n          card.size,\r\n          rectangleProps\r\n        );\r\n        newCards.set(card.id, {\r\n          id: card.id,\r\n          pos: card.pos,\r\n          size: card.size,\r\n          propsBeforeChange: card.propsBeforeChange,\r\n          selected: flagExpandCurrentSelection ? (flagSelect || card.selected) : flagSelect,\r\n          flags: card.flags\r\n        });\r\n      });\r\n      return {\r\n        past: cards.past, // no need to update the past when selecting cards\r\n        present: newCards,\r\n        future: cards.future // no need to update the future when selecting cards\r\n      };\r\n    });\r\n  }, [isCardInsideSelectionRect]);\r\n\r\n  const undo = useCallback(() => {\r\n    setCards(cards => ({\r\n      past: cards.past.length > 0 ? cards.past.slice(0, cards.past.length - 1) : cards.past,\r\n      present: cards.past.length > 0 ? cards.past[cards.past.length - 1] : cards.present,\r\n      future: cards.past.length > 0 ? cards.future.concat([cards.present]) : cards.future\r\n    }));\r\n  }, []);\r\n\r\n  const redo = useCallback(() => {\r\n    setCards(cards => ({\r\n      past: cards.future.length > 0 ? cards.past.concat([cards.present]) : cards.past,\r\n      present: cards.future.length > 0 ? cards.future[cards.future.length - 1] : cards.present,\r\n      future: cards.future.length > 0 ? cards.future.slice(0, cards.future.length - 1) : cards.future\r\n    }));\r\n  }, []);\r\n\r\n  const cardFlags = {\r\n    canUndo: cards.past.length > 0,\r\n    canRedo: cards.future.length > 0\r\n  }\r\n\r\n  const cardMethods = {\r\n    add: addNewCard,\r\n    move: moveCard,\r\n    translateSelected: translateSelectedCards,\r\n    resize: resizeCard,\r\n    __updatePropsBeforeChange: __updatePropsBeforeChange,\r\n    isSelected: isCardSelected,\r\n    toggleSelect: toggleCardSelection,\r\n    clearSelection: clearSelection,\r\n    delete: deleteCard,\r\n    deleteSelected: deleteSelectedCards,\r\n    selectWithRectangle: selectWithRectangle,\r\n    undo: undo,\r\n    redo: redo\r\n  }\r\n\r\n  return [cards.present, cardFlags, cardMethods];\r\n}\r\nexport default useCards;","function useData() {\r\n\r\n    const fieldsTable1 = [\"anio\", \"nombre\", \"cantidad\"];\r\n    const fieldsTable2 = [\"dni\", \"provincia\", \"edad\"];\r\n    const fieldsTable3 = [\"fruta\", \"calorías\"];\r\n\r\n\r\n    const dataStructure = new Map();\r\n    dataStructure.set(\"table1\", {id: \"table1\", fields: fieldsTable1});\r\n    dataStructure.set(\"table2\", {id: \"table2\", fields: fieldsTable2});\r\n    dataStructure.set(\"table3\", {id: \"table3\", fields: fieldsTable3});\r\n\r\n    const data = null;\r\n\r\n    return [dataStructure, data];\r\n}\r\n\r\nexport default useData;","import React from 'react';\r\nimport './Controls.css';\r\n\r\nfunction Controls(props) {\r\n  // const [test, setTest] = useState(false);\r\n  // const toggleTest = () => setTest(prevTest => !prevTest);\r\n  return (\r\n    <div className=\"controls\">\r\n      <button\r\n        className={\"button\" + (props.cardFlags.canUndo ? \"\" : \" disabled\")}\r\n        onPointerDown={props.cardMethods.undo}>Undo</button>\r\n      <button\r\n        className={\"button\" + (props.cardFlags.canRedo ? \"\" : \" disabled\")}\r\n        onPointerDown={props.cardMethods.redo}>Redo</button>\r\n      <button\r\n        className=\"button\"\r\n        onPointerDown={props.controlMethods.toggleSidePanel}>Toggle menu</button>\r\n      <button\r\n        alt=\"Toggle snap to grid\"\r\n        className={\"button\" + (props.controlFlags.snapToGrid ? \" active\" : \"\")}\r\n        onPointerDown={props.controlMethods.toggleSnapToGrid}>\r\n        Snap to grid\r\n      </button>\r\n      <button\r\n        alt=\"Toggle display grid\"\r\n        className={\"button\" + (props.controlFlags.displayGrid ? \" active\" : \"\")}\r\n        onPointerDown={props.controlMethods.toggleDisplayGrid}>\r\n        Display grid\r\n      </button>\r\n      <button\r\n        className=\"button\"\r\n        onPointerDown={() => props.cardMethods.add({ left: 100, top: 300 })}>+</button>\r\n      <button\r\n        className={\"button\" + (props.controlFlags.allowSelection ? \" active\" : \"\")}\r\n        onPointerDown={props.controlMethods.toggleFlagAllowSelection}>Select</button>\r\n      <button\r\n        className=\"button\"\r\n        onPointerDown={props.cardMethods.deleteSelected}>Delete</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Controls;","import React, { useState } from 'react';\r\nimport './FieldsList.css';\r\n\r\nfunction FieldsList(props) {\r\n\r\n  const [flagExpanded, setFlagExpanded] = useState(false);\r\n\r\n  const toggleExpand = (e) => {\r\n    e.target.innerHTML = flagExpanded ? \"+\" : \"-\";\r\n    setFlagExpanded(!flagExpanded);\r\n  }\r\n\r\n  return (\r\n    <section className=\"table-fields-section\">\r\n      <div className=\"container-button-and-title\">\r\n        <button\r\n          className=\"button-expand-collapse\"\r\n          onPointerUp={toggleExpand}>+</button>\r\n        <h4\r\n          id={props.tableStructure.id}\r\n          className=\"fields-table-name\">\r\n          {props.tableStructure.id}\r\n        </h4>\r\n      </div>\r\n      <ul className={\"fields-list\" + (flagExpanded ? \"\" : \" hidden\")}>\r\n        {\r\n          props.tableStructure.fields.map((field, i, arr) => {\r\n            return (\r\n              <li\r\n                key={i}\r\n                id={\"table-\" + props.tableStructure.id + \"-field-\" + field}\r\n                className=\"field-item\">\r\n                {field}\r\n              </li>\r\n            );\r\n          })\r\n        }\r\n      </ul>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default FieldsList;","import React, { useState } from 'react';\r\nimport './SidePanel.css';\r\nimport FieldsList from './components/fields-list/FieldsList.js';\r\n\r\nfunction SidePanel(props) {\r\n\r\n  const [activeSection, setActiveSection] = useState(\"fields\");\r\n  \r\n  const handlePointerDown = (e) => {\r\n    let selectedSection = e.target.dataset.section;\r\n    if (selectedSection === undefined) {\r\n      selectedSection = e.target.parentNode.dataset.section;\r\n    }\r\n    if(activeSection !== selectedSection) {\r\n      setActiveSection(selectedSection);\r\n      props.controlMethods.setFlagShowSidePanel(true);\r\n    } else {\r\n      props.controlMethods.toggleSidePanel();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={\"side-panel\" + (props.controlFlags.showSidePanel ? \"\" : \" hide\")}>\r\n\r\n      <div className=\"buttons-container\">\r\n        <button\r\n          data-section=\"fields\"\r\n          className={activeSection === \"fields\" ? \"active\" : \"\"}\r\n          onPointerDown={handlePointerDown}>\r\n          <span className=\"text\">Fields</span>\r\n        </button>\r\n        <button\r\n          data-section=\"format\"\r\n          className={activeSection === \"format\" ? \"active\" : \"\"}\r\n          onPointerDown={handlePointerDown}>\r\n          <span className=\"text\">Format</span>\r\n        </button>\r\n        <button\r\n          data-section=\"other\"\r\n          className={activeSection === \"other\" ? \"active\" : \"\"}\r\n          onPointerDown={handlePointerDown}>\r\n          <span className=\"text\">Other</span>\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"sections-container\">\r\n        <section className={\"section\" + (activeSection === \"fields\" ? \" active\" : \"\")}>\r\n          <h3 className=\"title\">Fields</h3>\r\n          {\r\n            Array.from(props.dataStructure.values()).map((tableStructure, i, arr) => {\r\n              return <FieldsList key={i} tableStructure={tableStructure} />\r\n            })\r\n          }\r\n        </section>\r\n        <section className={\"section\" + (activeSection === \"format\" ? \" active\" : \"\")}>\r\n          <h3 className=\"title\">Format</h3>\r\n          Format options\r\n        </section>\r\n        <section className={\"section\" + (activeSection === \"other\" ? \" active\" : \"\")}>\r\n          <h3 className=\"title\">Other</h3>\r\n          Other\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidePanel;","import React from 'react';\r\nimport './MetaCard.css';\r\n\r\nfunction MetaCard(props) {\r\n\r\n  const selected = props.cardInfo.selected;\r\n\r\n  return (\r\n    <div\r\n      id={props.cardInfo.id}\r\n      className={\"resizeable-card-container\" + (selected ? \" selected\" : \"\") + (props.controlFlags.snapToGrid ? \" animate-all\" : \"\" ) + (props.dashboardFlags.overrideHoverPointers ? \" unset-cursors\" : \"\")}\r\n      style={{\r\n        left: props.cardInfo.pos.left + \"px\",\r\n        top: props.cardInfo.pos.top + \"px\",\r\n        backgroundColor: props.color\r\n      }}>\r\n      <div className=\"col-container\">\r\n        <div className=\"corner nw\" data-anchor={{ right: true, bottom: true }}></div>\r\n        <div className=\"border vertical left\" data-anchor={{ right: true, bottom: false }}></div>\r\n        <div className=\"corner sw\" data-anchor={{ right: true, bottom: false }}></div>\r\n      </div>\r\n\r\n      <div className=\"col-container\">\r\n        <div className=\"border horizontal top\" data-anchor={{ right: false, bottom: true }}></div>\r\n\r\n        {/* {props.children} */}\r\n        <div\r\n          className=\"content\"\r\n          style={{\r\n            width: props.cardInfo.size.width + \"px\",\r\n            height: props.cardInfo.size.height + \"px\"\r\n          }}>\r\n          {/* {\"Debug info: \" + debugInfo} */}\r\n          {/* {\"controller index: \" + controllerPointerIndex} */}\r\n        </div>\r\n        <div className=\"border horizontal bottom\" data-anchor={{ right: false, bottom: false }}></div>\r\n      </div>\r\n\r\n      <div className=\"col-container\">\r\n        <div className=\"corner ne\" data-anchor={{ right: false, bottom: true }}></div>\r\n        <div className=\"border vertical right\" data-anchor={{ right: false, bottom: false }}></div>\r\n        <div className=\"corner se\" data-anchor={{ right: false, bottom: false }}></div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MetaCard;","import { useEffect, useState, useCallback, useLayoutEffect } from 'react';\r\n\r\nfunction useDashboardEventHandlers(dashboardId, cardMethods, controlMethods, controlFlags) {\r\n\r\n  // const cardContainer = document.getElementById(carId);\r\n\r\n  const [allowResize, setAllowResize] = useState({ width: false, height: false });\r\n  const [allowMove, setAllowMove] = useState(false);\r\n\r\n  const [lastClickedPos, setLastClickedPos] = useState({ x: 0, y: 0 });\r\n  const [anchor, setAnchor] = useState({ right: false, bottom: false });\r\n  const [lastContainerClicked, setLastContainerClicked] = useState(null);\r\n  const [flagOverrideHoverPointers, setFlagOverrideHoverPointers] = useState(false);\r\n  const [lockCtrlKey, setLockCtrlKey] = useState(false);\r\n  const [selectionRectangleProps, setSelectionRectangleProps] = useState({\r\n    flagDraw: false,\r\n    pos: { left: 0, top: 0 },\r\n    size: { width: 0, height: 0 }\r\n  });\r\n  const [flagPointerDown, setFlagPointerDown] = useState(false);\r\n  // const [flagAllowRectangleSelect, setFlagAllowRectangleSelect] = useState(false);\r\n  // const setFlagAllowRectangleSelect = useCallback((newFlag) => {\r\n  //   controlMethods.setFlagAllowSelection(newFlag);\r\n  // }, []);\r\n  // const flagAllowRectangleSelect = controlFlags.allowSelection;\r\n  // const [flagIsLongPress, setFlagIsLongPress] = useState(false);\r\n  // const [flagWaitingLongPress, setFlagWaitingLongPress] = useState(false);\r\n  // const [timerLongPress, setTimerLongPress] = useState(null);\r\n  // const [dashboardScrollSize, setDashboardScrollSize] = useState({\r\n  //   width: \"100%\",\r\n  //   height: \"100%\"\r\n  // })\r\n\r\n  // const dashboard = useMemo(() => {\r\n  //   return document.getElementById(dashboardId);\r\n  // }, [dashboardId]);\r\n\r\n  // Cursor handlers\r\n  const setBorderCursorGlobalClass = useCallback((isBorder, isCorner, isHorizontal, anchor) => {\r\n    let cursorClass = \"\"\r\n    if (isBorder) {\r\n      if (isHorizontal) {\r\n        cursorClass = \"ns-resize\";\r\n      } else {\r\n        cursorClass = \"ew-resize\";\r\n      }\r\n    } else {\r\n      if (isCorner) {// It is a corner\r\n        const anchorsEncoded = [+anchor.right, +anchor.bottom].join(\"\");\r\n        const cornerCursorClassByAnchors = {\r\n          \"00\": \"se-resize\",\r\n          \"01\": \"ne-resize\",\r\n          \"10\": \"sw-resize\",\r\n          \"11\": \"nw-resize\"\r\n        }\r\n        cursorClass = cornerCursorClassByAnchors[anchorsEncoded];\r\n      } else {\r\n        cursorClass = \"normal\";\r\n      }\r\n    }\r\n    const dashboard = document.getElementById(dashboardId);\r\n    dashboard.style.setProperty(\"cursor\", cursorClass);\r\n  }, [dashboardId]);\r\n\r\n  const clearBorderCursorGlobalClass = useCallback(() => {\r\n    const dashboard = document.getElementById(dashboardId);\r\n    dashboard.style.removeProperty(\"cursor\");\r\n  }, [dashboardId]);\r\n\r\n  const containedInCardContainer = useCallback((element) => {\r\n    let a = element;\r\n    while (a) {\r\n      if (Array.from(a.classList).includes(\"resizeable-card-container\")) {\r\n        return a;\r\n      } else {\r\n        a = a.parentElement;\r\n      }\r\n    }\r\n    return null;\r\n  }, []);\r\n  // ---------------------------------------------------------------------------\r\n\r\n  // Pointer down\r\n  useEffect(() => {\r\n    const dashboard = document.getElementById(dashboardId);\r\n    const handlePointerDown = (e) => {\r\n      e.preventDefault();\r\n      setFlagPointerDown(true);\r\n      setLastClickedPos({ x: e.pageX, y: e.pageY });\r\n\r\n      // Did the user click on a card? If so, the function returns the card\r\n      // container element. If not, \"false\" is returned instead.\r\n      const cardContainer = containedInCardContainer(e.target);\r\n\r\n      if (cardContainer !== null) {\r\n\r\n        cardMethods.__updatePropsBeforeChange();\r\n        setLastContainerClicked(cardContainer);\r\n\r\n        const cardId = cardContainer.id;\r\n\r\n        if (e.shiftKey === true) {\r\n          cardMethods.toggleSelect(cardId);\r\n        } else {\r\n\r\n          // If not currently selected, clear previous selection and select the\r\n          // clicked card.\r\n          if (cardMethods.isSelected(cardId) === false) {\r\n            cardMethods.clearSelection();\r\n            cardMethods.toggleSelect(cardId);\r\n          }\r\n\r\n          const classesTargetElement = Array.from(e.target.classList);\r\n          const isBorder = classesTargetElement.includes(\"border\");\r\n          const isCorner = classesTargetElement.includes(\"corner\");\r\n\r\n          if (isBorder || isCorner) {\r\n\r\n            const isHor = classesTargetElement.includes(\"horizontal\");\r\n            // const isVer = classesTargetElement.includes(\"vertical\");\r\n\r\n            const leftClasses = [\"left\", \"nw\", \"sw\"];\r\n            const isLeft = classesTargetElement.some((el) => leftClasses.includes(el));\r\n\r\n            const topClasses = [\"top\", \"nw\", \"ne\"];\r\n            const isTop = classesTargetElement.some((el) => topClasses.includes(el));\r\n\r\n            const newAnchor = {\r\n              right: isLeft,\r\n              bottom: isTop\r\n            }\r\n            setAnchor(newAnchor);\r\n\r\n            setAllowResize({\r\n              width: !isHor || isCorner,\r\n              height: isHor || isCorner\r\n            });\r\n\r\n            setBorderCursorGlobalClass(isBorder, isCorner, isHor, newAnchor);\r\n            setFlagOverrideHoverPointers(true);\r\n\r\n          } else {\r\n            setAllowMove(true);\r\n          }\r\n        }\r\n      } else {\r\n        if (e.ctrlKey === true) {\r\n          const dashboardRect = dashboard.getBoundingClientRect();\r\n          cardMethods.add({\r\n            left: e.pageX - dashboardRect.left + dashboard.scrollLeft,\r\n            top: e.pageY - dashboardRect.top + dashboard.scrollTop\r\n          });\r\n        } else {\r\n          // If no card was clicked, and if the ctrl and shift keys were not\r\n          // pressed, we can clear the selection.\r\n          if (!e.shiftKey) {\r\n            cardMethods.clearSelection();\r\n          }\r\n\r\n          // if (e.pointerType === \"touch\") {\r\n          //   // e.preventDefault();\r\n          //   setFlagWaitingLongPress(true);\r\n          //   const timer = window.setTimeout(() => {\r\n          //     controlMethods.setFlagAllowSelection(true);\r\n          //   }, 400);\r\n          //   setTimerLongPress(timer);\r\n          // } else {\r\n          //   controlMethods.setFlagAllowSelection(true);\r\n          // }\r\n          if (e.pointerType !== \"touch\") {\r\n            controlMethods.setFlagAllowSelection(true);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    dashboard.addEventListener(\"pointerdown\", handlePointerDown, false);\r\n    return () => dashboard.removeEventListener(\"pointerdown\", handlePointerDown, false);\r\n  }, [\r\n    cardMethods, // Ok?\r\n    dashboardId, // Ok\r\n    setBorderCursorGlobalClass, // Ok?\r\n    containedInCardContainer, // Ok\r\n    controlMethods // Ok?\r\n  ]);\r\n\r\n  // Pointer move\r\n  useLayoutEffect(() => {\r\n\r\n    const dashboard = document.getElementById(dashboardId);\r\n\r\n    const handlePointerMove = (e) => {\r\n      e.preventDefault();\r\n      const translation = {\r\n        x: e.pageX - lastClickedPos.x,\r\n        y: e.pageY - lastClickedPos.y\r\n      }\r\n      // const pointerTravelledDistance = Math.sqrt(translation.x * translation.x + translation.y * translation.y);\r\n\r\n      if (allowMove) {\r\n\r\n        if (e.shiftKey === false) {\r\n          cardMethods.translateSelected(translation);\r\n        } else {\r\n          const priorizeX = Math.abs(translation.x) > Math.abs(translation.y);\r\n          const priorizeY = !priorizeX;\r\n\r\n          const restrictedTranslation = {\r\n            x: priorizeX ? translation.x : 0,\r\n            y: priorizeY ? translation.y : 0\r\n          }\r\n          cardMethods.translateSelected(restrictedTranslation);\r\n        }\r\n      } else {\r\n        if (allowResize.width || allowResize.height) {\r\n\r\n          const resizeTranslation = {\r\n            x: allowResize.width ? translation.x : 0,\r\n            y: allowResize.height ? translation.y : 0\r\n          };\r\n          cardMethods.resize(lastContainerClicked.id, resizeTranslation, allowResize, anchor);\r\n        } else {\r\n          if (flagPointerDown) {\r\n            if (controlFlags.allowSelection) {\r\n              const dashboardRect = dashboard.getBoundingClientRect();\r\n              const newSelectionRectangleProps = {\r\n                flagDraw: true,\r\n                pos: {\r\n                  left: Math.min(lastClickedPos.x, e.pageX) - dashboardRect.left + dashboard.scrollLeft,\r\n                  top: Math.min(lastClickedPos.y, e.pageY) - dashboardRect.top + dashboard.scrollTop\r\n                },\r\n                size: {\r\n                  width: Math.abs(e.pageX - lastClickedPos.x),\r\n                  height: Math.abs(e.pageY - lastClickedPos.y)\r\n                }\r\n              };\r\n              // console.log(JSON.stringify(e.offsetX + \"-\" + e.offsetY));\r\n              setSelectionRectangleProps(newSelectionRectangleProps);\r\n              const flagExpandCurrentSelection = e.shiftKey;\r\n              cardMethods.selectWithRectangle(\r\n                newSelectionRectangleProps,\r\n                flagExpandCurrentSelection);\r\n            } //else {\r\n            //   if (e.pointerType === \"touch\" && flagWaitingLongPress && pointerTravelledDistance > 0) {\r\n            //     window.clearTimeout(timerLongPress);\r\n            //     setTimerLongPress(null);\r\n            //     setFlagWaitingLongPress(false);\r\n            //   }\r\n            // }\r\n          }\r\n        }\r\n      }\r\n      // if (allowMove || allowResize.width || allowResize.height) {\r\n      //   // console.log(\"ran\");\r\n      //   setDashboardScrollSize({\r\n      //     width: dashboard.scrollWidth,\r\n      //     height: dashboard.scrollHeight\r\n      //   });\r\n      // }\r\n    }\r\n    dashboard.addEventListener(\"pointermove\", handlePointerMove, false);\r\n    return () => dashboard.removeEventListener(\"pointermove\", handlePointerMove, false);\r\n  }, [\r\n    cardMethods, // ok?\r\n    dashboardId, // ok\r\n    allowMove, // ok\r\n    allowResize, // ok\r\n    anchor, // ok\r\n    lastClickedPos, // ok\r\n    lastContainerClicked, // ok\r\n    flagPointerDown, // ok\r\n    controlFlags.allowSelection // ok\r\n    //flagWaitingLongPress, // ok\r\n    //timerLongPress\r\n  ]);\r\n\r\n  // Pointer up\r\n  useEffect(() => {\r\n    const dashboard = document.getElementById(dashboardId);\r\n    const handlePointerUp = (e) => {\r\n      // e.preventDefault();\r\n      // Disallow both movement and resizing.\r\n      setFlagPointerDown(false);\r\n      setAllowResize({ width: false, height: false });\r\n      setAllowMove(false);\r\n      clearBorderCursorGlobalClass();\r\n      setFlagOverrideHoverPointers(false);\r\n      setSelectionRectangleProps({\r\n        flagDraw: false,\r\n        pos: { left: 0, top: 0 },\r\n        size: { width: 0, height: 0 }\r\n      });\r\n      // setFlagAllowRectangleSelect(false);\r\n      controlMethods.setFlagAllowSelection(false);\r\n      // if (e.pointerType === \"touch\" && timerLongPress !== null) {\r\n      //   window.clearTimeout(timerLongPress);\r\n      // }\r\n    }\r\n    dashboard.addEventListener(\"pointerup\", handlePointerUp, false);\r\n    return () => dashboard.removeEventListener(\"pointerup\", handlePointerUp, false);\r\n  }, [\r\n    cardMethods, // Ok?\r\n    dashboardId, // Ok\r\n    clearBorderCursorGlobalClass, // Ok?\r\n    controlMethods // Ok?\r\n    //timerLongPress, // Ok?\r\n  ]);\r\n\r\n  // Key down\r\n  useEffect(() => {\r\n\r\n    const handleKeyDown = (e) => {\r\n      switch (e.key) {\r\n        case \"Escape\":\r\n          cardMethods.clearSelection();\r\n          break;\r\n        case \"Delete\":\r\n          cardMethods.deleteSelected();\r\n          break;\r\n        case \"Control\":\r\n          if (!lockCtrlKey) {\r\n            controlMethods.toggleSnapToGrid();\r\n            setLockCtrlKey(true);\r\n          }\r\n          break;\r\n        case \"Backspace\":\r\n          cardMethods.deleteSelected();\r\n          break;\r\n        default:\r\n          // alert(keyboardInfo.lastKeyPressed);\r\n          break;\r\n      }\r\n    }\r\n\r\n    const handleKeyUp = (e) => {\r\n      switch (e.key) {\r\n        case \"Escape\":\r\n          break;\r\n        case \"Delete\":\r\n          break;\r\n        case \"Control\":\r\n          controlMethods.toggleSnapToGrid();\r\n          setLockCtrlKey(false);\r\n          break;\r\n        case \"Backspace\":\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    window.addEventListener(\"keydown\", handleKeyDown, false);\r\n    window.addEventListener(\"keyup\", handleKeyUp, false);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown, false);\r\n      window.removeEventListener(\"keyup\", handleKeyUp, false);\r\n    }\r\n\r\n  }, [cardMethods, controlMethods, lockCtrlKey]);\r\n\r\n  // const handlers = {\r\n  //   pointerDown: handlePointerDown,\r\n  //   pointerMove: handlePointerMove,\r\n  //   pointerUp: handlePointerUp\r\n  // }\r\n\r\n  // const scrollSize = useMemo(() => {\r\n  //   // const dashboard = document.getElementById(dashboardId);\r\n  //   const scrollWidth = dashboard === null ? 0 : dashboard.scrollWidth;\r\n  //   const scrollHeight = dashboard === null ? 0 : dashboard.scrollHeight;\r\n  //   return {\r\n  //     width: scrollWidth,\r\n  //     height: scrollHeight\r\n  //   }\r\n  // }, [dashboard, dashboard.scrollWidth, dashboard.scrollHeight]);\r\n\r\n  const debugInfo = JSON.stringify({\r\n    allowResize: allowResize,\r\n    allowMove: allowMove,\r\n    lastClickedPos: lastClickedPos,\r\n    anchor: anchor\r\n  });\r\n\r\n  const dashboardFlags = {\r\n    overrideHoverPointers: flagOverrideHoverPointers,\r\n    allowRectangleSelect: controlFlags.allowSelection,\r\n    pointerDown: flagPointerDown\r\n  }\r\n  const dashboardProps = {\r\n    debugInfo: debugInfo,\r\n    selectionRectangleProps: selectionRectangleProps\r\n    // scrollSize: dashboardScrollSize\r\n  }\r\n\r\n  return [dashboardFlags, dashboardProps];\r\n}\r\n\r\nexport default useDashboardEventHandlers;","import React from 'react';\r\nimport './SelectionRectangle.css';\r\n\r\nfunction SelectionRectangle(props) {\r\n    // console.log(props.flagDraw);\r\n    return (\r\n        <div\r\n            className={\"selection-rectangle\" + (props.selRectInfo.flagDraw ? \"\" : \" hide\")}\r\n            style={{\r\n                left: props.selRectInfo.pos.left,\r\n                top: props.selRectInfo.pos.top,\r\n                width: props.selRectInfo.size.width,\r\n                height: props.selRectInfo.size.height}}>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SelectionRectangle;","import React from 'react';\r\nimport './Grid.css';\r\n\r\nfunction Grid(props) {\r\n  return (\r\n    <div\r\n      className=\"grid\" >\r\n      {\r\n        props.controlFlags.displayGrid === true &&\r\n        <span>\r\n          <div\r\n            className=\"small-grid\"></div>\r\n          <div\r\n            className=\"big-grid\"></div>\r\n        </span>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Grid;","import React, { useRef } from 'react';\r\nimport './DashboardContent.css';\r\nimport MetaCard from './components/meta-card/MetaCard.js';\r\nimport useDashboardEventHandlers from './customHooks/useDashboardEventHandlers.js';\r\nimport SelectionRectangle from './components/selection-rectangle/SelectionRectangle.js';\r\nimport Grid from './components/grid/Grid.js';\r\n\r\nconst DASHBOARD_ID = \"dashboard-content\";\r\n\r\nfunction DashboardContent(props) {\r\n\r\n  const dashboardRef = useRef(null);\r\n\r\n  const [dashboardFlags, dashboardProps] = useDashboardEventHandlers(\r\n    DASHBOARD_ID,\r\n    props.cardMethods,\r\n    props.controlMethods,\r\n    props.controlFlags);\r\n\r\n  return (\r\n    <div\r\n      id={DASHBOARD_ID}\r\n      // onPointerDown={dashboardMethods.onPointerDown}\r\n      className={\"dashboard-content\" + (dashboardFlags.allowRectangleSelect ? \" touch-action-none\" : \"\")}\r\n      ref={dashboardRef}>\r\n      <Grid\r\n        controlFlags={props.controlFlags}\r\n        controlProps={props.controlProps}\r\n        dashboardRef={dashboardRef} /> \r\n        {/* dashboardScrollSize={dashboardProps.scrollSize} /> */}\r\n      {/* <span className=\"debug-info\">{dashboardProps.debugInfo}</span> */}\r\n      {/* <span className=\"debug-info\">{\"allow rect select: \" + dashboardFlags.allowRectangleSelect}</span> */}\r\n      {/* <span className=\"debug-info\">{JSON.stringify(dashboardProps.scrollSize)}</span> */}\r\n      {\r\n        Array.from(props.cards.values()).map((cardInfo, i, arr) => {\r\n          return <MetaCard\r\n            key={i}\r\n            cardInfo={cardInfo}\r\n            dashboardFlags={dashboardFlags}\r\n            controlFlags={props.controlFlags} />\r\n        })\r\n      }\r\n      <SelectionRectangle selRectInfo={dashboardProps.selectionRectangleProps} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DashboardContent;","import React from 'react';\nimport './App.css';\n\n// Custom hooks-----------------------------------------------------------------\nimport useControls from './customHooks/useControls.js';\nimport useCards from './customHooks/useCards.js';\nimport useData from './customHooks/useData.js';\n// -----------------------------------------------------------------------------\n\n// Basic components-------------------------------------------------------------\nimport Controls from './components/controls/Controls.js';\nimport SidePanel from './components/side-panel/SidePanel.js';\nimport DashboardContent from './components/dashboard-content/DashboardContent.js';\n// -----------------------------------------------------------------------------\n\nfunction App() {\n\n  const [controlFlags, controlMethods] = useControls();\n  \n  const [cards, cardFlags, cardMethods] = useCards(controlFlags);\n  const [dataStructure, data] = useData();\n\n  return (\n    <div\n      className=\"App\">\n      \n      <Controls\n        cardFlags={cardFlags}\n        cardMethods={cardMethods}\n        controlFlags={controlFlags}\n        controlMethods={controlMethods} />\n\n      <div className=\"container-for-side-panel-and-content\">\n        \n        <SidePanel\n          controlFlags={controlFlags}\n          controlMethods={controlMethods}\n          dataStructure={dataStructure} />\n        \n        <DashboardContent\n          cards={cards}\n          cardMethods={cardMethods}\n          controlFlags={controlFlags}\n          controlMethods={controlMethods}\n          data={data} />\n\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}